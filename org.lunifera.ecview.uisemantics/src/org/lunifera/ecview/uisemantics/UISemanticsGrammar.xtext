grammar org.lunifera.ecview.uisemantics.UISemanticsGrammar with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/xtext/xbase/Xtype" as type
import "http://www.eclipse.org/xtext/common/JavaVMTypes"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.lunifera.org/ecview/dsl/uimodel/semantics" as semantic

UxModel returns semantic::UxModel:
	{semantic::UxModel}
	importSection=XImportSection?
	('actions' '{'
	viewActions+=UxAction*
	'}')?
	('categories' '{'
	categories+=UxViewCategory*
	'}')?
	elementDefinitions+=UxElementDefinition*;

UxAction returns semantic::UxAction:
	name=QualifiedName ('externalCommand' externalCommandId=STRING)? (initialDisabled?="disabled")?;

UxViewCategory returns semantic::UxViewCategory:
	name=QualifiedName;

XImportDeclaration returns semantic::UxImportSectionDeclaration:
	{semantic::UxImportSectionDeclaration}
	('import' ((static?='static' extension?='extension'? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	(wildcard?='*' | memberName=ValidID))
	| importedType=[JvmDeclaredType|QualifiedName]
	| importedNamespace=QualifiedNameWithWildcard))
	| (("ePackage" importedEPackage=UxEPackageImport)) ';'?;

UxEPackageImport returns semantic::UxEPackageImport:
	ePackage=[ecore::EPackage|STRING] 'as' alias=ID;

UxElementDefinition returns semantic::UxElementDefinition:
	'element' name=ID '{'
	(uri=UxElementURI)?
	('bindings' '{'
	bindingContainer=UxAvailableBindings
	'}')?
	('visibility' '{'
	visibilityContainer=UxAvailableVisibilityOptions
	'}')?
	('validator' '{'
	validatorContainer=UxAvailableValidatorProperties
	'}')?
	'}';

UxAvailableValidatorProperties returns semantic::UxAvailableValidatorProperties:
	{semantic::UxAvailableValidatorProperties}
	properties+=UxValidatorProperty*;

UxValidatorProperty returns semantic::UxValidatorProperty:
	'property' name=ID;

UxElementURI returns semantic::UxElementURI:
	'uri' ePackage=[semantic::UxEPackageImport] ":" eClass=[ecore::EClass];

UxAvailableBindings returns semantic::UxAvailableBindings:
	{semantic::UxAvailableBindings}
	bindings+=UxBindingableOption*;

UxAvailableVisibilityOptions returns semantic::UxAvailableVisibilityOptions:
	{semantic::UxAvailableVisibilityOptions}
	bindings+=UxVisibleableOption*;

UxBindingableOption returns semantic::UxBindingableOption:
	(final?='final')? (listbinding?='list')? 'endpoint' name=ID jvmType=JvmTypeReference ('target' targetName=ID)?;

UxVisibleableOption returns semantic::UxVisibleableOption:
	'endpoint' name=ID jvmType=JvmTypeReference;

