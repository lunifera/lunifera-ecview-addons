/*
* generated by Xtext
*/
package org.lunifera.ecview.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class UIGrammarGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class UiModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiModel");
		private final Assignment cViewSetAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cViewSetUiViewSetParserRuleCall_0 = (RuleCall)cViewSetAssignment.eContents().get(0);
		
		//UiModel:
		//	viewSet+=UiViewSet*;
		public ParserRule getRule() { return rule; }

		//viewSet+=UiViewSet*
		public Assignment getViewSetAssignment() { return cViewSetAssignment; }

		//UiViewSet
		public RuleCall getViewSetUiViewSetParserRuleCall_0() { return cViewSetUiViewSetParserRuleCall_0; }
	}

	public class UiViewSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiViewSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYViewSetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cViewsetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final Keyword cBeanslotsKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cBeanSlotsAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cBeanSlotsUiBeanSlotParserRuleCall_3_0_2_0 = (RuleCall)cBeanSlotsAssignment_3_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_3 = (Keyword)cGroup_3_0.eContents().get(3);
		private final Assignment cViewsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cViewsUiViewParserRuleCall_3_1_0 = (RuleCall)cViewsAssignment_3_1.eContents().get(0);
		
		//UiViewSet returns core::YViewSet:
		//	{core::YViewSet} "viewset" name=ID (("beanslots" "{" beanSlots+=UiBeanSlot* "}")? views+=UiView*);
		public ParserRule getRule() { return rule; }

		//{core::YViewSet} "viewset" name=ID (("beanslots" "{" beanSlots+=UiBeanSlot* "}")? views+=UiView*)
		public Group getGroup() { return cGroup; }

		//{core::YViewSet}
		public Action getYViewSetAction_0() { return cYViewSetAction_0; }

		//"viewset"
		public Keyword getViewsetKeyword_1() { return cViewsetKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("beanslots" "{" beanSlots+=UiBeanSlot* "}")? views+=UiView*
		public Group getGroup_3() { return cGroup_3; }

		//("beanslots" "{" beanSlots+=UiBeanSlot* "}")?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"beanslots"
		public Keyword getBeanslotsKeyword_3_0_0() { return cBeanslotsKeyword_3_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_1() { return cLeftCurlyBracketKeyword_3_0_1; }

		//beanSlots+=UiBeanSlot*
		public Assignment getBeanSlotsAssignment_3_0_2() { return cBeanSlotsAssignment_3_0_2; }

		//UiBeanSlot
		public RuleCall getBeanSlotsUiBeanSlotParserRuleCall_3_0_2_0() { return cBeanSlotsUiBeanSlotParserRuleCall_3_0_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_3() { return cRightCurlyBracketKeyword_3_0_3; }

		//views+=UiView*
		public Assignment getViewsAssignment_3_1() { return cViewsAssignment_3_1; }

		//UiView
		public RuleCall getViewsUiViewParserRuleCall_3_1_0() { return cViewsUiViewParserRuleCall_3_1_0; }
	}

	public class UiBeanSlotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBeanSlot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGBeanSlotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSlotKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJvmTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJvmTypeJvmTypeReferenceParserRuleCall_4_0 = (RuleCall)cJvmTypeAssignment_4.eContents().get(0);
		
		//UiBeanSlot returns core::YBeanSlot:
		//	{GBeanSlot} "slot" name=ID ":" jvmType=JvmTypeReference;
		public ParserRule getRule() { return rule; }

		//{GBeanSlot} "slot" name=ID ":" jvmType=JvmTypeReference
		public Group getGroup() { return cGroup; }

		//{GBeanSlot}
		public Action getGBeanSlotAction_0() { return cGBeanSlotAction_0; }

		//"slot"
		public Keyword getSlotKeyword_1() { return cSlotKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//jvmType=JvmTypeReference
		public Assignment getJvmTypeAssignment_4() { return cJvmTypeAssignment_4; }

		//JvmTypeReference
		public RuleCall getJvmTypeJvmTypeReferenceParserRuleCall_4_0() { return cJvmTypeJvmTypeReferenceParserRuleCall_4_0; }
	}

	public class UiViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiView");
		private final RuleCall cUiIDEViewParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UiView returns core::YView:
		//	UiIDEView;
		public ParserRule getRule() { return rule; }

		//UiIDEView
		public RuleCall getUiIDEViewParserRuleCall() { return cUiIDEViewParserRuleCall; }
	}

	public class UiIDEViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiIDEView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdeviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLayoutsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutsUiLayoutParserRuleCall_3_0 = (RuleCall)cLayoutsAssignment_3.eContents().get(0);
		private final Assignment cBindingsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBindingsUiBindingParserRuleCall_4_0 = (RuleCall)cBindingsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiIDEView:
		//	"ideview" name=ID "{" layouts+=UiLayout* bindings+=UiBinding* "}";
		public ParserRule getRule() { return rule; }

		//"ideview" name=ID "{" layouts+=UiLayout* bindings+=UiBinding* "}"
		public Group getGroup() { return cGroup; }

		//"ideview"
		public Keyword getIdeviewKeyword_0() { return cIdeviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//layouts+=UiLayout*
		public Assignment getLayoutsAssignment_3() { return cLayoutsAssignment_3; }

		//UiLayout
		public RuleCall getLayoutsUiLayoutParserRuleCall_3_0() { return cLayoutsUiLayoutParserRuleCall_3_0; }

		//bindings+=UiBinding*
		public Assignment getBindingsAssignment_4() { return cBindingsAssignment_4; }

		//UiBinding
		public RuleCall getBindingsUiBindingParserRuleCall_4_0() { return cBindingsUiBindingParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class UiGridLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiGridLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGGridLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGridlayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cColumnsKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cColumnsAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cColumnsINTTerminalRuleCall_2_1_0_1_0 = (RuleCall)cColumnsAssignment_2_1_0_1.eContents().get(0);
		private final Assignment cFillHorizontalAssignment_2_1_1 = (Assignment)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cFillHorizontalFillHKeyword_2_1_1_0 = (Keyword)cFillHorizontalAssignment_2_1_1.eContents().get(0);
		private final Assignment cFillVerticalAssignment_2_1_2 = (Assignment)cUnorderedGroup_2_1.eContents().get(2);
		private final Keyword cFillVerticalFillVKeyword_2_1_2_0 = (Keyword)cFillVerticalAssignment_2_1_2.eContents().get(0);
		private final Assignment cSpacingAssignment_2_1_3 = (Assignment)cUnorderedGroup_2_1.eContents().get(3);
		private final Keyword cSpacingSpacingKeyword_2_1_3_0 = (Keyword)cSpacingAssignment_2_1_3.eContents().get(0);
		private final Assignment cMarginAssignment_2_1_4 = (Assignment)cUnorderedGroup_2_1.eContents().get(4);
		private final Keyword cMarginMarginKeyword_2_1_4_0 = (Keyword)cMarginAssignment_2_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContentsUiGridLayoutAssigmentParserRuleCall_5_0 = (RuleCall)cContentsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//UiGridLayout returns ext::YGridLayout:
		//	{GGridLayout} "gridlayout" ("(" (("columns=" columns=INT)? & fillHorizontal?="fill-h"? & fillVertical?="fill-v"? &
		//	spacing?="spacing"? & margin?="margin"?) ")")? name=ID? "{" contents+=UiGridLayoutAssigment* "}";
		public ParserRule getRule() { return rule; }

		//{GGridLayout} "gridlayout" ("(" (("columns=" columns=INT)? & fillHorizontal?="fill-h"? & fillVertical?="fill-v"? &
		//spacing?="spacing"? & margin?="margin"?) ")")? name=ID? "{" contents+=UiGridLayoutAssigment* "}"
		public Group getGroup() { return cGroup; }

		//{GGridLayout}
		public Action getGGridLayoutAction_0() { return cGGridLayoutAction_0; }

		//"gridlayout"
		public Keyword getGridlayoutKeyword_1() { return cGridlayoutKeyword_1; }

		//("(" (("columns=" columns=INT)? & fillHorizontal?="fill-h"? & fillVertical?="fill-v"? & spacing?="spacing"? &
		//margin?="margin"?) ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//("columns=" columns=INT)? & fillHorizontal?="fill-h"? & fillVertical?="fill-v"? & spacing?="spacing"? &
		//margin?="margin"?
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }

		//("columns=" columns=INT)?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"columns="
		public Keyword getColumnsKeyword_2_1_0_0() { return cColumnsKeyword_2_1_0_0; }

		//columns=INT
		public Assignment getColumnsAssignment_2_1_0_1() { return cColumnsAssignment_2_1_0_1; }

		//INT
		public RuleCall getColumnsINTTerminalRuleCall_2_1_0_1_0() { return cColumnsINTTerminalRuleCall_2_1_0_1_0; }

		//fillHorizontal?="fill-h"?
		public Assignment getFillHorizontalAssignment_2_1_1() { return cFillHorizontalAssignment_2_1_1; }

		//"fill-h"
		public Keyword getFillHorizontalFillHKeyword_2_1_1_0() { return cFillHorizontalFillHKeyword_2_1_1_0; }

		//fillVertical?="fill-v"?
		public Assignment getFillVerticalAssignment_2_1_2() { return cFillVerticalAssignment_2_1_2; }

		//"fill-v"
		public Keyword getFillVerticalFillVKeyword_2_1_2_0() { return cFillVerticalFillVKeyword_2_1_2_0; }

		//spacing?="spacing"?
		public Assignment getSpacingAssignment_2_1_3() { return cSpacingAssignment_2_1_3; }

		//"spacing"
		public Keyword getSpacingSpacingKeyword_2_1_3_0() { return cSpacingSpacingKeyword_2_1_3_0; }

		//margin?="margin"?
		public Assignment getMarginAssignment_2_1_4() { return cMarginAssignment_2_1_4; }

		//"margin"
		public Keyword getMarginMarginKeyword_2_1_4_0() { return cMarginMarginKeyword_2_1_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//contents+=UiGridLayoutAssigment*
		public Assignment getContentsAssignment_5() { return cContentsAssignment_5; }

		//UiGridLayoutAssigment
		public RuleCall getContentsUiGridLayoutAssigmentParserRuleCall_5_0() { return cContentsUiGridLayoutAssigmentParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class UiGridLayoutAssigmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiGridLayoutAssigment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementUiEmbeddableParserRuleCall_0_0 = (RuleCall)cElementAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cAlignKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cAlignmentAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cAlignmentUiAlignmentEnumRuleCall_1_0_1_0 = (RuleCall)cAlignmentAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cSpanKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cFromAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cFromUiPointParserRuleCall_1_1_1_0 = (RuleCall)cFromAssignment_1_1_1.eContents().get(0);
		private final Keyword cToKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cToAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cToUiPointParserRuleCall_1_1_3_0 = (RuleCall)cToAssignment_1_1_3.eContents().get(0);
		
		//UiGridLayoutAssigment:
		//	element=UiEmbeddable (("align" alignment=UiAlignment)? & ("span" from=UiPoint "to" to=UiPoint)?);
		public ParserRule getRule() { return rule; }

		//element=UiEmbeddable (("align" alignment=UiAlignment)? & ("span" from=UiPoint "to" to=UiPoint)?)
		public Group getGroup() { return cGroup; }

		//element=UiEmbeddable
		public Assignment getElementAssignment_0() { return cElementAssignment_0; }

		//UiEmbeddable
		public RuleCall getElementUiEmbeddableParserRuleCall_0_0() { return cElementUiEmbeddableParserRuleCall_0_0; }

		//("align" alignment=UiAlignment)? & ("span" from=UiPoint "to" to=UiPoint)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//("align" alignment=UiAlignment)?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"align"
		public Keyword getAlignKeyword_1_0_0() { return cAlignKeyword_1_0_0; }

		//alignment=UiAlignment
		public Assignment getAlignmentAssignment_1_0_1() { return cAlignmentAssignment_1_0_1; }

		//UiAlignment
		public RuleCall getAlignmentUiAlignmentEnumRuleCall_1_0_1_0() { return cAlignmentUiAlignmentEnumRuleCall_1_0_1_0; }

		//("span" from=UiPoint "to" to=UiPoint)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"span"
		public Keyword getSpanKeyword_1_1_0() { return cSpanKeyword_1_1_0; }

		//from=UiPoint
		public Assignment getFromAssignment_1_1_1() { return cFromAssignment_1_1_1; }

		//UiPoint
		public RuleCall getFromUiPointParserRuleCall_1_1_1_0() { return cFromUiPointParserRuleCall_1_1_1_0; }

		//"to"
		public Keyword getToKeyword_1_1_2() { return cToKeyword_1_1_2; }

		//to=UiPoint
		public Assignment getToAssignment_1_1_3() { return cToAssignment_1_1_3; }

		//UiPoint
		public RuleCall getToUiPointParserRuleCall_1_1_3_0() { return cToUiPointParserRuleCall_1_1_3_0; }
	}

	public class UiPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cXINTTerminalRuleCall_0_0 = (RuleCall)cXAssignment_0.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cYAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYINTTerminalRuleCall_2_0 = (RuleCall)cYAssignment_2.eContents().get(0);
		
		//UiPoint:
		//	x=INT "/" y=INT;
		public ParserRule getRule() { return rule; }

		//x=INT "/" y=INT
		public Group getGroup() { return cGroup; }

		//x=INT
		public Assignment getXAssignment_0() { return cXAssignment_0; }

		//INT
		public RuleCall getXINTTerminalRuleCall_0_0() { return cXINTTerminalRuleCall_0_0; }

		//"/"
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }

		//y=INT
		public Assignment getYAssignment_2() { return cYAssignment_2; }

		//INT
		public RuleCall getYINTTerminalRuleCall_2_0() { return cYINTTerminalRuleCall_2_0; }
	}

	public class UiSpanInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiSpanInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYSpanInfoAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_1_0 = (UnorderedGroup)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cUnorderedGroup_1_0.eContents().get(0);
		private final Keyword cColumnFromKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cColumnFromAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cColumnFromINTTerminalRuleCall_1_0_0_1_0 = (RuleCall)cColumnFromAssignment_1_0_0_1.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cUnorderedGroup_1_0.eContents().get(1);
		private final Keyword cColumnToKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cColumnToAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cColumnToINTTerminalRuleCall_1_0_1_1_0 = (RuleCall)cColumnToAssignment_1_0_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cUnorderedGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cRowFromKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cRowFromAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cRowFromINTTerminalRuleCall_1_1_0_1_0 = (RuleCall)cRowFromAssignment_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cRowToKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cRowToAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cRowToINTTerminalRuleCall_1_1_1_1_0 = (RuleCall)cRowToAssignment_1_1_1_1.eContents().get(0);
		
		//UiSpanInfo returns ext::YSpanInfo:
		//	{ext::YSpanInfo} (("columnFrom" columnFrom=INT & "columnTo" columnTo=INT)? & ("rowFrom" rowFrom=INT & "rowTo"
		//	rowTo=INT)?);
		public ParserRule getRule() { return rule; }

		//{ext::YSpanInfo} (("columnFrom" columnFrom=INT & "columnTo" columnTo=INT)? & ("rowFrom" rowFrom=INT & "rowTo"
		//rowTo=INT)?)
		public Group getGroup() { return cGroup; }

		//{ext::YSpanInfo}
		public Action getYSpanInfoAction_0() { return cYSpanInfoAction_0; }

		//("columnFrom" columnFrom=INT & "columnTo" columnTo=INT)? & ("rowFrom" rowFrom=INT & "rowTo" rowTo=INT)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//("columnFrom" columnFrom=INT & "columnTo" columnTo=INT)?
		public UnorderedGroup getUnorderedGroup_1_0() { return cUnorderedGroup_1_0; }

		//"columnFrom" columnFrom=INT
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//"columnFrom"
		public Keyword getColumnFromKeyword_1_0_0_0() { return cColumnFromKeyword_1_0_0_0; }

		//columnFrom=INT
		public Assignment getColumnFromAssignment_1_0_0_1() { return cColumnFromAssignment_1_0_0_1; }

		//INT
		public RuleCall getColumnFromINTTerminalRuleCall_1_0_0_1_0() { return cColumnFromINTTerminalRuleCall_1_0_0_1_0; }

		//"columnTo" columnTo=INT
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }

		//"columnTo"
		public Keyword getColumnToKeyword_1_0_1_0() { return cColumnToKeyword_1_0_1_0; }

		//columnTo=INT
		public Assignment getColumnToAssignment_1_0_1_1() { return cColumnToAssignment_1_0_1_1; }

		//INT
		public RuleCall getColumnToINTTerminalRuleCall_1_0_1_1_0() { return cColumnToINTTerminalRuleCall_1_0_1_1_0; }

		//("rowFrom" rowFrom=INT & "rowTo" rowTo=INT)?
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }

		//"rowFrom" rowFrom=INT
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }

		//"rowFrom"
		public Keyword getRowFromKeyword_1_1_0_0() { return cRowFromKeyword_1_1_0_0; }

		//rowFrom=INT
		public Assignment getRowFromAssignment_1_1_0_1() { return cRowFromAssignment_1_1_0_1; }

		//INT
		public RuleCall getRowFromINTTerminalRuleCall_1_1_0_1_0() { return cRowFromINTTerminalRuleCall_1_1_0_1_0; }

		//"rowTo" rowTo=INT
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//"rowTo"
		public Keyword getRowToKeyword_1_1_1_0() { return cRowToKeyword_1_1_1_0; }

		//rowTo=INT
		public Assignment getRowToAssignment_1_1_1_1() { return cRowToAssignment_1_1_1_1; }

		//INT
		public RuleCall getRowToINTTerminalRuleCall_1_1_1_1_0() { return cRowToINTTerminalRuleCall_1_1_1_1_0; }
	}

	public class UiTextFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiTextField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGTextFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextfieldKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cDatatypeKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Assignment cDatatypeAssignment_3_1_0_1 = (Assignment)cGroup_3_1_0.eContents().get(1);
		private final CrossReference cDatatypeYTextDatatypeCrossReference_3_1_0_1_0 = (CrossReference)cDatatypeAssignment_3_1_0_1.eContents().get(0);
		private final RuleCall cDatatypeYTextDatatypeIDTerminalRuleCall_3_1_0_1_0_1 = (RuleCall)cDatatypeYTextDatatypeCrossReference_3_1_0_1_0.eContents().get(1);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cDatadescriptionKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cDatadescriptionAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final CrossReference cDatadescriptionYDatadescriptionCrossReference_3_1_1_1_0 = (CrossReference)cDatadescriptionAssignment_3_1_1_1.eContents().get(0);
		private final RuleCall cDatadescriptionYDatadescriptionIDTerminalRuleCall_3_1_1_1_0_1 = (RuleCall)cDatadescriptionYDatadescriptionCrossReference_3_1_1_1_0.eContents().get(1);
		private final Group cGroup_3_1_2 = (Group)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cValueKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cValueAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cValueIDTerminalRuleCall_3_1_2_1_0 = (RuleCall)cValueAssignment_3_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//UiTextField returns ext::YTextField:
		//	{GTextField} "textfield" name=ID? ("{" (("datatype" datatype=[extDt::YTextDatatype])? & ("datadescription"
		//	datadescription=[coreDt::YDatadescription])? & ("value" value=ID)?) "}")?;
		public ParserRule getRule() { return rule; }

		//{GTextField} "textfield" name=ID? ("{" (("datatype" datatype=[extDt::YTextDatatype])? & ("datadescription"
		//datadescription=[coreDt::YDatadescription])? & ("value" value=ID)?) "}")?
		public Group getGroup() { return cGroup; }

		//{GTextField}
		public Action getGTextFieldAction_0() { return cGTextFieldAction_0; }

		//"textfield"
		public Keyword getTextfieldKeyword_1() { return cTextfieldKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" (("datatype" datatype=[extDt::YTextDatatype])? & ("datadescription" datadescription=[coreDt::YDatadescription])? &
		//("value" value=ID)?) "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("datatype" datatype=[extDt::YTextDatatype])? & ("datadescription" datadescription=[coreDt::YDatadescription])? &
		//("value" value=ID)?
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }

		//("datatype" datatype=[extDt::YTextDatatype])?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }

		//"datatype"
		public Keyword getDatatypeKeyword_3_1_0_0() { return cDatatypeKeyword_3_1_0_0; }

		//datatype=[extDt::YTextDatatype]
		public Assignment getDatatypeAssignment_3_1_0_1() { return cDatatypeAssignment_3_1_0_1; }

		//[extDt::YTextDatatype]
		public CrossReference getDatatypeYTextDatatypeCrossReference_3_1_0_1_0() { return cDatatypeYTextDatatypeCrossReference_3_1_0_1_0; }

		//ID
		public RuleCall getDatatypeYTextDatatypeIDTerminalRuleCall_3_1_0_1_0_1() { return cDatatypeYTextDatatypeIDTerminalRuleCall_3_1_0_1_0_1; }

		//("datadescription" datadescription=[coreDt::YDatadescription])?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//"datadescription"
		public Keyword getDatadescriptionKeyword_3_1_1_0() { return cDatadescriptionKeyword_3_1_1_0; }

		//datadescription=[coreDt::YDatadescription]
		public Assignment getDatadescriptionAssignment_3_1_1_1() { return cDatadescriptionAssignment_3_1_1_1; }

		//[coreDt::YDatadescription]
		public CrossReference getDatadescriptionYDatadescriptionCrossReference_3_1_1_1_0() { return cDatadescriptionYDatadescriptionCrossReference_3_1_1_1_0; }

		//ID
		public RuleCall getDatadescriptionYDatadescriptionIDTerminalRuleCall_3_1_1_1_0_1() { return cDatadescriptionYDatadescriptionIDTerminalRuleCall_3_1_1_1_0_1; }

		//("value" value=ID)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }

		//"value"
		public Keyword getValueKeyword_3_1_2_0() { return cValueKeyword_3_1_2_0; }

		//value=ID
		public Assignment getValueAssignment_3_1_2_1() { return cValueAssignment_3_1_2_1; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_3_1_2_1_0() { return cValueIDTerminalRuleCall_3_1_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class UiListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//UiList returns ext::YList:
		//	{GList} "list" name=ID?;
		public ParserRule getRule() { return rule; }

		//{GList} "list" name=ID?
		public Group getGroup() { return cGroup; }

		//{GList}
		public Action getGListAction_0() { return cGListAction_0; }

		//"list"
		public Keyword getListKeyword_1() { return cListKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class UiEmbeddableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiEmbeddable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UiEmbeddable returns core::YEmbeddable:
		//	UiLayout | UiField;
		public ParserRule getRule() { return rule; }

		//UiLayout | UiField
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiLayout
		public RuleCall getUiLayoutParserRuleCall_0() { return cUiLayoutParserRuleCall_0; }

		//UiField
		public RuleCall getUiFieldParserRuleCall_1() { return cUiFieldParserRuleCall_1; }
	}

	public class UiLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiLayout");
		private final RuleCall cUiGridLayoutParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UiLayout returns core::YLayout:
		//	UiGridLayout;
		public ParserRule getRule() { return rule; }

		//UiGridLayout
		public RuleCall getUiGridLayoutParserRuleCall() { return cUiGridLayoutParserRuleCall; }
	}

	public class UiFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiTextFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UiField returns core::YField:
		//	UiTextField | UiList;
		public ParserRule getRule() { return rule; }

		//UiTextField | UiList
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiTextField
		public RuleCall getUiTextFieldParserRuleCall_0() { return cUiTextFieldParserRuleCall_0; }

		//UiList
		public RuleCall getUiListParserRuleCall_1() { return cUiListParserRuleCall_1; }
	}

	public class UiValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiValidator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiMaxLengthValidatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiMinLengthValidatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UiValidator returns coreVal::YValidator:
		//	UiMaxLengthValidator | UiMinLengthValidator;
		public ParserRule getRule() { return rule; }

		//UiMaxLengthValidator | UiMinLengthValidator
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiMaxLengthValidator
		public RuleCall getUiMaxLengthValidatorParserRuleCall_0() { return cUiMaxLengthValidatorParserRuleCall_0; }

		//UiMinLengthValidator
		public RuleCall getUiMinLengthValidatorParserRuleCall_1() { return cUiMinLengthValidatorParserRuleCall_1; }
	}

	public class UiMaxLengthValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiMaxLengthValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaxKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UiMaxLengthValidator returns coreVal::YValidator:
		//	{coreVal::YValidator} "max";
		public ParserRule getRule() { return rule; }

		//{coreVal::YValidator} "max"
		public Group getGroup() { return cGroup; }

		//{coreVal::YValidator}
		public Action getYValidatorAction_0() { return cYValidatorAction_0; }

		//"max"
		public Keyword getMaxKeyword_1() { return cMaxKeyword_1; }
	}

	public class UiMinLengthValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiMinLengthValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UiMinLengthValidator returns coreVal::YValidator:
		//	{coreVal::YValidator} "min";
		public ParserRule getRule() { return rule; }

		//{coreVal::YValidator} "min"
		public Group getGroup() { return cGroup; }

		//{coreVal::YValidator}
		public Action getYValidatorAction_0() { return cYValidatorAction_0; }

		//"min"
		public Keyword getMinKeyword_1() { return cMinKeyword_1; }
	}

	public class UiBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBindKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSourceUiSourceBindingEndpointParserRuleCall_1_0 = (RuleCall)cSourceAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTargetToSourceAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cTargetToSourceLessThanSignKeyword_2_0_0 = (Keyword)cTargetToSourceAssignment_2_0.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cSourceToTargetAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Keyword cSourceToTargetGreaterThanSignKeyword_2_2_0 = (Keyword)cSourceToTargetAssignment_2_2.eContents().get(0);
		private final Assignment cTargetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTargetUiTargetBindingEndpointParserRuleCall_3_0 = (RuleCall)cTargetAssignment_3.eContents().get(0);
		
		//UiBinding:
		//	"bind" source=UiSourceBindingEndpoint (targetToSource?="<"? "--" sourceToTarget?=">"?) target=UiTargetBindingEndpoint;
		public ParserRule getRule() { return rule; }

		//"bind" source=UiSourceBindingEndpoint (targetToSource?="<"? "--" sourceToTarget?=">"?) target=UiTargetBindingEndpoint
		public Group getGroup() { return cGroup; }

		//"bind"
		public Keyword getBindKeyword_0() { return cBindKeyword_0; }

		//source=UiSourceBindingEndpoint
		public Assignment getSourceAssignment_1() { return cSourceAssignment_1; }

		//UiSourceBindingEndpoint
		public RuleCall getSourceUiSourceBindingEndpointParserRuleCall_1_0() { return cSourceUiSourceBindingEndpointParserRuleCall_1_0; }

		//targetToSource?="<"? "--" sourceToTarget?=">"?
		public Group getGroup_2() { return cGroup_2; }

		//targetToSource?="<"?
		public Assignment getTargetToSourceAssignment_2_0() { return cTargetToSourceAssignment_2_0; }

		//"<"
		public Keyword getTargetToSourceLessThanSignKeyword_2_0_0() { return cTargetToSourceLessThanSignKeyword_2_0_0; }

		//"--"
		public Keyword getHyphenMinusHyphenMinusKeyword_2_1() { return cHyphenMinusHyphenMinusKeyword_2_1; }

		//sourceToTarget?=">"?
		public Assignment getSourceToTargetAssignment_2_2() { return cSourceToTargetAssignment_2_2; }

		//">"
		public Keyword getSourceToTargetGreaterThanSignKeyword_2_2_0() { return cSourceToTargetGreaterThanSignKeyword_2_2_0; }

		//target=UiTargetBindingEndpoint
		public Assignment getTargetAssignment_3() { return cTargetAssignment_3; }

		//UiTargetBindingEndpoint
		public RuleCall getTargetUiTargetBindingEndpointParserRuleCall_3_0() { return cTargetUiTargetBindingEndpointParserRuleCall_3_0; }
	}

	public class UiSourceBindingEndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiSourceBindingEndpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEmbeddableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEmbeddableYBindableCrossReference_0_0 = (CrossReference)cEmbeddableAssignment_0.eContents().get(0);
		private final RuleCall cEmbeddableYBindableFQNParserRuleCall_0_0_1 = (RuleCall)cEmbeddableYBindableCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEndpointAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEndpointUxEndpointDefCommonCrossReference_2_0 = (CrossReference)cEndpointAssignment_2.eContents().get(0);
		private final RuleCall cEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1 = (RuleCall)cEndpointUxEndpointDefCommonCrossReference_2_0.eContents().get(1);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathUiPathSegmentParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		
		//UiSourceBindingEndpoint:
		//	embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?;
		public ParserRule getRule() { return rule; }

		//embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?
		public Group getGroup() { return cGroup; }

		//embeddable=[core::YBindable|FQN]
		public Assignment getEmbeddableAssignment_0() { return cEmbeddableAssignment_0; }

		//[core::YBindable|FQN]
		public CrossReference getEmbeddableYBindableCrossReference_0_0() { return cEmbeddableYBindableCrossReference_0_0; }

		//FQN
		public RuleCall getEmbeddableYBindableFQNParserRuleCall_0_0_1() { return cEmbeddableYBindableFQNParserRuleCall_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//endpoint=[cfg::UxEndpointDefCommon]
		public Assignment getEndpointAssignment_2() { return cEndpointAssignment_2; }

		//[cfg::UxEndpointDefCommon]
		public CrossReference getEndpointUxEndpointDefCommonCrossReference_2_0() { return cEndpointUxEndpointDefCommonCrossReference_2_0; }

		//ID
		public RuleCall getEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1() { return cEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_3_0() { return cPathUiPathSegmentParserRuleCall_3_0; }
	}

	public class UiTargetBindingEndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiTargetBindingEndpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEmbeddableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEmbeddableYBindableCrossReference_0_0 = (CrossReference)cEmbeddableAssignment_0.eContents().get(0);
		private final RuleCall cEmbeddableYBindableFQNParserRuleCall_0_0_1 = (RuleCall)cEmbeddableYBindableCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEndpointAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEndpointUxEndpointDefCommonCrossReference_2_0 = (CrossReference)cEndpointAssignment_2.eContents().get(0);
		private final RuleCall cEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1 = (RuleCall)cEndpointUxEndpointDefCommonCrossReference_2_0.eContents().get(1);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathUiPathSegmentParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		
		//UiTargetBindingEndpoint:
		//	embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?;
		public ParserRule getRule() { return rule; }

		//embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?
		public Group getGroup() { return cGroup; }

		//embeddable=[core::YBindable|FQN]
		public Assignment getEmbeddableAssignment_0() { return cEmbeddableAssignment_0; }

		//[core::YBindable|FQN]
		public CrossReference getEmbeddableYBindableCrossReference_0_0() { return cEmbeddableYBindableCrossReference_0_0; }

		//FQN
		public RuleCall getEmbeddableYBindableFQNParserRuleCall_0_0_1() { return cEmbeddableYBindableFQNParserRuleCall_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//endpoint=[cfg::UxEndpointDefCommon]
		public Assignment getEndpointAssignment_2() { return cEndpointAssignment_2; }

		//[cfg::UxEndpointDefCommon]
		public CrossReference getEndpointUxEndpointDefCommonCrossReference_2_0() { return cEndpointUxEndpointDefCommonCrossReference_2_0; }

		//ID
		public RuleCall getEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1() { return cEndpointUxEndpointDefCommonIDTerminalRuleCall_2_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_3_0() { return cPathUiPathSegmentParserRuleCall_3_0; }
	}

	public class UiPathSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiPathSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiPathSegmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJvmFieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cJvmFieldJvmFieldCrossReference_2_0 = (CrossReference)cJvmFieldAssignment_2.eContents().get(0);
		private final RuleCall cJvmFieldJvmFieldIDTerminalRuleCall_2_0_1 = (RuleCall)cJvmFieldJvmFieldCrossReference_2_0.eContents().get(1);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathUiPathSegmentParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		
		//UiPathSegment:
		//	{UiPathSegment} "->" jvmField=[JvmField] path=UiPathSegment?;
		public ParserRule getRule() { return rule; }

		//{UiPathSegment} "->" jvmField=[JvmField] path=UiPathSegment?
		public Group getGroup() { return cGroup; }

		//{UiPathSegment}
		public Action getUiPathSegmentAction_0() { return cUiPathSegmentAction_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//jvmField=[JvmField]
		public Assignment getJvmFieldAssignment_2() { return cJvmFieldAssignment_2; }

		//[JvmField]
		public CrossReference getJvmFieldJvmFieldCrossReference_2_0() { return cJvmFieldJvmFieldCrossReference_2_0; }

		//ID
		public RuleCall getJvmFieldJvmFieldIDTerminalRuleCall_2_0_1() { return cJvmFieldJvmFieldIDTerminalRuleCall_2_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_3_0() { return cPathUiPathSegmentParserRuleCall_3_0; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//FQN:
		//	(ID ".")* ID;
		public ParserRule getRule() { return rule; }

		//(ID ".")* ID
		public Group getGroup() { return cGroup; }

		//(ID ".")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	public class UiAlignmentElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "UiAlignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBOTTOM_LEFTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBOTTOM_LEFTBottomLeftKeyword_0_0 = (Keyword)cBOTTOM_LEFTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBOTTOM_CENTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBOTTOM_CENTERBottomCenterKeyword_1_0 = (Keyword)cBOTTOM_CENTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOTTOM_RIGHTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOTTOM_RIGHTBottomRightKeyword_2_0 = (Keyword)cBOTTOM_RIGHTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBOTTOM_FILLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBOTTOM_FILLBottomFillKeyword_3_0 = (Keyword)cBOTTOM_FILLEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_LEFTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMIDDLE_LEFTMiddleLeftKeyword_4_0 = (Keyword)cMIDDLE_LEFTEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_CENTEREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMIDDLE_CENTERMiddleCenterKeyword_5_0 = (Keyword)cMIDDLE_CENTEREnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMIDDLE_RIGHTEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMIDDLE_RIGHTMiddleRightKeyword_6_0 = (Keyword)cMIDDLE_RIGHTEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cBOTTOM_FILLEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cBOTTOM_FILLMiddleFillKeyword_7_0 = (Keyword)cBOTTOM_FILLEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cTOP_LEFTEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cTOP_LEFTTopLeftKeyword_8_0 = (Keyword)cTOP_LEFTEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cTOP_CENTEREnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cTOP_CENTERTopCenterKeyword_9_0 = (Keyword)cTOP_CENTEREnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cTOP_RIGHTEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cTOP_RIGHTTopRightKeyword_10_0 = (Keyword)cTOP_RIGHTEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cTOP_FILLEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cTOP_FILLTopFillKeyword_11_0 = (Keyword)cTOP_FILLEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cFILL_LEFTEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cFILL_LEFTFillLeftKeyword_12_0 = (Keyword)cFILL_LEFTEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cFILL_CENTEREnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cFILL_CENTERFillCenterKeyword_13_0 = (Keyword)cFILL_CENTEREnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cFILL_RIGHTEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cFILL_RIGHTFillRIGHTKeyword_14_0 = (Keyword)cFILL_RIGHTEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cFILL_FILLEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cFILL_FILLFillFillKeyword_15_0 = (Keyword)cFILL_FILLEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cUNDEFINEDEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cUNDEFINEDUndefinedKeyword_16_0 = (Keyword)cUNDEFINEDEnumLiteralDeclaration_16.eContents().get(0);
		
		//enum UiAlignment returns ext::YAlignment:
		//	BOTTOM_LEFT="bottom left" | BOTTOM_CENTER="bottom center" | BOTTOM_RIGHT="bottom right" | BOTTOM_FILL="bottom fill" |
		//	MIDDLE_LEFT="middle left" | MIDDLE_CENTER="middle center" | MIDDLE_RIGHT="middle right" | BOTTOM_FILL="middle fill" |
		//	TOP_LEFT="top left" | TOP_CENTER="top center" | TOP_RIGHT="top right" | TOP_FILL="top fill" | FILL_LEFT="fill left" |
		//	FILL_CENTER="fill center" | FILL_RIGHT="fill RIGHT" | FILL_FILL="fill fill" | UNDEFINED="undefined";
		public EnumRule getRule() { return rule; }

		//BOTTOM_LEFT="bottom left" | BOTTOM_CENTER="bottom center" | BOTTOM_RIGHT="bottom right" | BOTTOM_FILL="bottom fill" |
		//MIDDLE_LEFT="middle left" | MIDDLE_CENTER="middle center" | MIDDLE_RIGHT="middle right" | BOTTOM_FILL="middle fill" |
		//TOP_LEFT="top left" | TOP_CENTER="top center" | TOP_RIGHT="top right" | TOP_FILL="top fill" | FILL_LEFT="fill left" |
		//FILL_CENTER="fill center" | FILL_RIGHT="fill RIGHT" | FILL_FILL="fill fill" | UNDEFINED="undefined"
		public Alternatives getAlternatives() { return cAlternatives; }

		//BOTTOM_LEFT="bottom left"
		public EnumLiteralDeclaration getBOTTOM_LEFTEnumLiteralDeclaration_0() { return cBOTTOM_LEFTEnumLiteralDeclaration_0; }

		//"bottom left"
		public Keyword getBOTTOM_LEFTBottomLeftKeyword_0_0() { return cBOTTOM_LEFTBottomLeftKeyword_0_0; }

		//BOTTOM_CENTER="bottom center"
		public EnumLiteralDeclaration getBOTTOM_CENTEREnumLiteralDeclaration_1() { return cBOTTOM_CENTEREnumLiteralDeclaration_1; }

		//"bottom center"
		public Keyword getBOTTOM_CENTERBottomCenterKeyword_1_0() { return cBOTTOM_CENTERBottomCenterKeyword_1_0; }

		//BOTTOM_RIGHT="bottom right"
		public EnumLiteralDeclaration getBOTTOM_RIGHTEnumLiteralDeclaration_2() { return cBOTTOM_RIGHTEnumLiteralDeclaration_2; }

		//"bottom right"
		public Keyword getBOTTOM_RIGHTBottomRightKeyword_2_0() { return cBOTTOM_RIGHTBottomRightKeyword_2_0; }

		//BOTTOM_FILL="bottom fill"
		public EnumLiteralDeclaration getBOTTOM_FILLEnumLiteralDeclaration_3() { return cBOTTOM_FILLEnumLiteralDeclaration_3; }

		//"bottom fill"
		public Keyword getBOTTOM_FILLBottomFillKeyword_3_0() { return cBOTTOM_FILLBottomFillKeyword_3_0; }

		//MIDDLE_LEFT="middle left"
		public EnumLiteralDeclaration getMIDDLE_LEFTEnumLiteralDeclaration_4() { return cMIDDLE_LEFTEnumLiteralDeclaration_4; }

		//"middle left"
		public Keyword getMIDDLE_LEFTMiddleLeftKeyword_4_0() { return cMIDDLE_LEFTMiddleLeftKeyword_4_0; }

		//MIDDLE_CENTER="middle center"
		public EnumLiteralDeclaration getMIDDLE_CENTEREnumLiteralDeclaration_5() { return cMIDDLE_CENTEREnumLiteralDeclaration_5; }

		//"middle center"
		public Keyword getMIDDLE_CENTERMiddleCenterKeyword_5_0() { return cMIDDLE_CENTERMiddleCenterKeyword_5_0; }

		//MIDDLE_RIGHT="middle right"
		public EnumLiteralDeclaration getMIDDLE_RIGHTEnumLiteralDeclaration_6() { return cMIDDLE_RIGHTEnumLiteralDeclaration_6; }

		//"middle right"
		public Keyword getMIDDLE_RIGHTMiddleRightKeyword_6_0() { return cMIDDLE_RIGHTMiddleRightKeyword_6_0; }

		//BOTTOM_FILL="middle fill"
		public EnumLiteralDeclaration getBOTTOM_FILLEnumLiteralDeclaration_7() { return cBOTTOM_FILLEnumLiteralDeclaration_7; }

		//"middle fill"
		public Keyword getBOTTOM_FILLMiddleFillKeyword_7_0() { return cBOTTOM_FILLMiddleFillKeyword_7_0; }

		//TOP_LEFT="top left"
		public EnumLiteralDeclaration getTOP_LEFTEnumLiteralDeclaration_8() { return cTOP_LEFTEnumLiteralDeclaration_8; }

		//"top left"
		public Keyword getTOP_LEFTTopLeftKeyword_8_0() { return cTOP_LEFTTopLeftKeyword_8_0; }

		//TOP_CENTER="top center"
		public EnumLiteralDeclaration getTOP_CENTEREnumLiteralDeclaration_9() { return cTOP_CENTEREnumLiteralDeclaration_9; }

		//"top center"
		public Keyword getTOP_CENTERTopCenterKeyword_9_0() { return cTOP_CENTERTopCenterKeyword_9_0; }

		//TOP_RIGHT="top right"
		public EnumLiteralDeclaration getTOP_RIGHTEnumLiteralDeclaration_10() { return cTOP_RIGHTEnumLiteralDeclaration_10; }

		//"top right"
		public Keyword getTOP_RIGHTTopRightKeyword_10_0() { return cTOP_RIGHTTopRightKeyword_10_0; }

		//TOP_FILL="top fill"
		public EnumLiteralDeclaration getTOP_FILLEnumLiteralDeclaration_11() { return cTOP_FILLEnumLiteralDeclaration_11; }

		//"top fill"
		public Keyword getTOP_FILLTopFillKeyword_11_0() { return cTOP_FILLTopFillKeyword_11_0; }

		//FILL_LEFT="fill left"
		public EnumLiteralDeclaration getFILL_LEFTEnumLiteralDeclaration_12() { return cFILL_LEFTEnumLiteralDeclaration_12; }

		//"fill left"
		public Keyword getFILL_LEFTFillLeftKeyword_12_0() { return cFILL_LEFTFillLeftKeyword_12_0; }

		//FILL_CENTER="fill center"
		public EnumLiteralDeclaration getFILL_CENTEREnumLiteralDeclaration_13() { return cFILL_CENTEREnumLiteralDeclaration_13; }

		//"fill center"
		public Keyword getFILL_CENTERFillCenterKeyword_13_0() { return cFILL_CENTERFillCenterKeyword_13_0; }

		//FILL_RIGHT="fill RIGHT"
		public EnumLiteralDeclaration getFILL_RIGHTEnumLiteralDeclaration_14() { return cFILL_RIGHTEnumLiteralDeclaration_14; }

		//"fill RIGHT"
		public Keyword getFILL_RIGHTFillRIGHTKeyword_14_0() { return cFILL_RIGHTFillRIGHTKeyword_14_0; }

		//FILL_FILL="fill fill"
		public EnumLiteralDeclaration getFILL_FILLEnumLiteralDeclaration_15() { return cFILL_FILLEnumLiteralDeclaration_15; }

		//"fill fill"
		public Keyword getFILL_FILLFillFillKeyword_15_0() { return cFILL_FILLFillFillKeyword_15_0; }

		//UNDEFINED="undefined"
		public EnumLiteralDeclaration getUNDEFINEDEnumLiteralDeclaration_16() { return cUNDEFINEDEnumLiteralDeclaration_16; }

		//"undefined"
		public Keyword getUNDEFINEDUndefinedKeyword_16_0() { return cUNDEFINEDUndefinedKeyword_16_0; }
	}

	public class SelectionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "SelectionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLESINGLEKeyword_0_0 = (Keyword)cSINGLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMULTIEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMULTIMULTIKeyword_1_0 = (Keyword)cMULTIEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum SelectionType returns ext::YSelectionType:
		//	SINGLE | MULTI;
		public EnumRule getRule() { return rule; }

		//SINGLE | MULTI
		public Alternatives getAlternatives() { return cAlternatives; }

		//SINGLE
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_0() { return cSINGLEEnumLiteralDeclaration_0; }

		//"SINGLE"
		public Keyword getSINGLESINGLEKeyword_0_0() { return cSINGLESINGLEKeyword_0_0; }

		//MULTI
		public EnumLiteralDeclaration getMULTIEnumLiteralDeclaration_1() { return cMULTIEnumLiteralDeclaration_1; }

		//"MULTI"
		public Keyword getMULTIMULTIKeyword_1_0() { return cMULTIMULTIKeyword_1_0; }
	}
	
	private UiModelElements pUiModel;
	private UiViewSetElements pUiViewSet;
	private UiBeanSlotElements pUiBeanSlot;
	private UiViewElements pUiView;
	private UiIDEViewElements pUiIDEView;
	private UiGridLayoutElements pUiGridLayout;
	private UiGridLayoutAssigmentElements pUiGridLayoutAssigment;
	private UiPointElements pUiPoint;
	private UiAlignmentElements unknownRuleUiAlignment;
	private UiSpanInfoElements pUiSpanInfo;
	private UiTextFieldElements pUiTextField;
	private UiListElements pUiList;
	private SelectionTypeElements unknownRuleSelectionType;
	private UiEmbeddableElements pUiEmbeddable;
	private UiLayoutElements pUiLayout;
	private UiFieldElements pUiField;
	private UiValidatorElements pUiValidator;
	private UiMaxLengthValidatorElements pUiMaxLengthValidator;
	private UiMinLengthValidatorElements pUiMinLengthValidator;
	private UiBindingElements pUiBinding;
	private UiSourceBindingEndpointElements pUiSourceBindingEndpoint;
	private UiTargetBindingEndpointElements pUiTargetBindingEndpoint;
	private UiPathSegmentElements pUiPathSegment;
	private FQNElements pFQN;
	
	private final Grammar grammar;

	private XbaseGrammarAccess gaXbase;

	@Inject
	public UIGrammarGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.lunifera.ecview.dsl.UIGrammar".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	
	//UiModel:
	//	viewSet+=UiViewSet*;
	public UiModelElements getUiModelAccess() {
		return (pUiModel != null) ? pUiModel : (pUiModel = new UiModelElements());
	}
	
	public ParserRule getUiModelRule() {
		return getUiModelAccess().getRule();
	}

	//UiViewSet returns core::YViewSet:
	//	{core::YViewSet} "viewset" name=ID (("beanslots" "{" beanSlots+=UiBeanSlot* "}")? views+=UiView*);
	public UiViewSetElements getUiViewSetAccess() {
		return (pUiViewSet != null) ? pUiViewSet : (pUiViewSet = new UiViewSetElements());
	}
	
	public ParserRule getUiViewSetRule() {
		return getUiViewSetAccess().getRule();
	}

	//UiBeanSlot returns core::YBeanSlot:
	//	{GBeanSlot} "slot" name=ID ":" jvmType=JvmTypeReference;
	public UiBeanSlotElements getUiBeanSlotAccess() {
		return (pUiBeanSlot != null) ? pUiBeanSlot : (pUiBeanSlot = new UiBeanSlotElements());
	}
	
	public ParserRule getUiBeanSlotRule() {
		return getUiBeanSlotAccess().getRule();
	}

	//UiView returns core::YView:
	//	UiIDEView;
	public UiViewElements getUiViewAccess() {
		return (pUiView != null) ? pUiView : (pUiView = new UiViewElements());
	}
	
	public ParserRule getUiViewRule() {
		return getUiViewAccess().getRule();
	}

	//UiIDEView:
	//	"ideview" name=ID "{" layouts+=UiLayout* bindings+=UiBinding* "}";
	public UiIDEViewElements getUiIDEViewAccess() {
		return (pUiIDEView != null) ? pUiIDEView : (pUiIDEView = new UiIDEViewElements());
	}
	
	public ParserRule getUiIDEViewRule() {
		return getUiIDEViewAccess().getRule();
	}

	//UiGridLayout returns ext::YGridLayout:
	//	{GGridLayout} "gridlayout" ("(" (("columns=" columns=INT)? & fillHorizontal?="fill-h"? & fillVertical?="fill-v"? &
	//	spacing?="spacing"? & margin?="margin"?) ")")? name=ID? "{" contents+=UiGridLayoutAssigment* "}";
	public UiGridLayoutElements getUiGridLayoutAccess() {
		return (pUiGridLayout != null) ? pUiGridLayout : (pUiGridLayout = new UiGridLayoutElements());
	}
	
	public ParserRule getUiGridLayoutRule() {
		return getUiGridLayoutAccess().getRule();
	}

	//UiGridLayoutAssigment:
	//	element=UiEmbeddable (("align" alignment=UiAlignment)? & ("span" from=UiPoint "to" to=UiPoint)?);
	public UiGridLayoutAssigmentElements getUiGridLayoutAssigmentAccess() {
		return (pUiGridLayoutAssigment != null) ? pUiGridLayoutAssigment : (pUiGridLayoutAssigment = new UiGridLayoutAssigmentElements());
	}
	
	public ParserRule getUiGridLayoutAssigmentRule() {
		return getUiGridLayoutAssigmentAccess().getRule();
	}

	//UiPoint:
	//	x=INT "/" y=INT;
	public UiPointElements getUiPointAccess() {
		return (pUiPoint != null) ? pUiPoint : (pUiPoint = new UiPointElements());
	}
	
	public ParserRule getUiPointRule() {
		return getUiPointAccess().getRule();
	}

	//enum UiAlignment returns ext::YAlignment:
	//	BOTTOM_LEFT="bottom left" | BOTTOM_CENTER="bottom center" | BOTTOM_RIGHT="bottom right" | BOTTOM_FILL="bottom fill" |
	//	MIDDLE_LEFT="middle left" | MIDDLE_CENTER="middle center" | MIDDLE_RIGHT="middle right" | BOTTOM_FILL="middle fill" |
	//	TOP_LEFT="top left" | TOP_CENTER="top center" | TOP_RIGHT="top right" | TOP_FILL="top fill" | FILL_LEFT="fill left" |
	//	FILL_CENTER="fill center" | FILL_RIGHT="fill RIGHT" | FILL_FILL="fill fill" | UNDEFINED="undefined";
	public UiAlignmentElements getUiAlignmentAccess() {
		return (unknownRuleUiAlignment != null) ? unknownRuleUiAlignment : (unknownRuleUiAlignment = new UiAlignmentElements());
	}
	
	public EnumRule getUiAlignmentRule() {
		return getUiAlignmentAccess().getRule();
	}

	//UiSpanInfo returns ext::YSpanInfo:
	//	{ext::YSpanInfo} (("columnFrom" columnFrom=INT & "columnTo" columnTo=INT)? & ("rowFrom" rowFrom=INT & "rowTo"
	//	rowTo=INT)?);
	public UiSpanInfoElements getUiSpanInfoAccess() {
		return (pUiSpanInfo != null) ? pUiSpanInfo : (pUiSpanInfo = new UiSpanInfoElements());
	}
	
	public ParserRule getUiSpanInfoRule() {
		return getUiSpanInfoAccess().getRule();
	}

	//UiTextField returns ext::YTextField:
	//	{GTextField} "textfield" name=ID? ("{" (("datatype" datatype=[extDt::YTextDatatype])? & ("datadescription"
	//	datadescription=[coreDt::YDatadescription])? & ("value" value=ID)?) "}")?;
	public UiTextFieldElements getUiTextFieldAccess() {
		return (pUiTextField != null) ? pUiTextField : (pUiTextField = new UiTextFieldElements());
	}
	
	public ParserRule getUiTextFieldRule() {
		return getUiTextFieldAccess().getRule();
	}

	//UiList returns ext::YList:
	//	{GList} "list" name=ID?;
	public UiListElements getUiListAccess() {
		return (pUiList != null) ? pUiList : (pUiList = new UiListElements());
	}
	
	public ParserRule getUiListRule() {
		return getUiListAccess().getRule();
	}

	//enum SelectionType returns ext::YSelectionType:
	//	SINGLE | MULTI;
	public SelectionTypeElements getSelectionTypeAccess() {
		return (unknownRuleSelectionType != null) ? unknownRuleSelectionType : (unknownRuleSelectionType = new SelectionTypeElements());
	}
	
	public EnumRule getSelectionTypeRule() {
		return getSelectionTypeAccess().getRule();
	}

	//UiEmbeddable returns core::YEmbeddable:
	//	UiLayout | UiField;
	public UiEmbeddableElements getUiEmbeddableAccess() {
		return (pUiEmbeddable != null) ? pUiEmbeddable : (pUiEmbeddable = new UiEmbeddableElements());
	}
	
	public ParserRule getUiEmbeddableRule() {
		return getUiEmbeddableAccess().getRule();
	}

	//UiLayout returns core::YLayout:
	//	UiGridLayout;
	public UiLayoutElements getUiLayoutAccess() {
		return (pUiLayout != null) ? pUiLayout : (pUiLayout = new UiLayoutElements());
	}
	
	public ParserRule getUiLayoutRule() {
		return getUiLayoutAccess().getRule();
	}

	//UiField returns core::YField:
	//	UiTextField | UiList;
	public UiFieldElements getUiFieldAccess() {
		return (pUiField != null) ? pUiField : (pUiField = new UiFieldElements());
	}
	
	public ParserRule getUiFieldRule() {
		return getUiFieldAccess().getRule();
	}

	//UiValidator returns coreVal::YValidator:
	//	UiMaxLengthValidator | UiMinLengthValidator;
	public UiValidatorElements getUiValidatorAccess() {
		return (pUiValidator != null) ? pUiValidator : (pUiValidator = new UiValidatorElements());
	}
	
	public ParserRule getUiValidatorRule() {
		return getUiValidatorAccess().getRule();
	}

	//UiMaxLengthValidator returns coreVal::YValidator:
	//	{coreVal::YValidator} "max";
	public UiMaxLengthValidatorElements getUiMaxLengthValidatorAccess() {
		return (pUiMaxLengthValidator != null) ? pUiMaxLengthValidator : (pUiMaxLengthValidator = new UiMaxLengthValidatorElements());
	}
	
	public ParserRule getUiMaxLengthValidatorRule() {
		return getUiMaxLengthValidatorAccess().getRule();
	}

	//UiMinLengthValidator returns coreVal::YValidator:
	//	{coreVal::YValidator} "min";
	public UiMinLengthValidatorElements getUiMinLengthValidatorAccess() {
		return (pUiMinLengthValidator != null) ? pUiMinLengthValidator : (pUiMinLengthValidator = new UiMinLengthValidatorElements());
	}
	
	public ParserRule getUiMinLengthValidatorRule() {
		return getUiMinLengthValidatorAccess().getRule();
	}

	//UiBinding:
	//	"bind" source=UiSourceBindingEndpoint (targetToSource?="<"? "--" sourceToTarget?=">"?) target=UiTargetBindingEndpoint;
	public UiBindingElements getUiBindingAccess() {
		return (pUiBinding != null) ? pUiBinding : (pUiBinding = new UiBindingElements());
	}
	
	public ParserRule getUiBindingRule() {
		return getUiBindingAccess().getRule();
	}

	//UiSourceBindingEndpoint:
	//	embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?;
	public UiSourceBindingEndpointElements getUiSourceBindingEndpointAccess() {
		return (pUiSourceBindingEndpoint != null) ? pUiSourceBindingEndpoint : (pUiSourceBindingEndpoint = new UiSourceBindingEndpointElements());
	}
	
	public ParserRule getUiSourceBindingEndpointRule() {
		return getUiSourceBindingEndpointAccess().getRule();
	}

	//UiTargetBindingEndpoint:
	//	embeddable=[core::YBindable|FQN] ":" endpoint=[cfg::UxEndpointDefCommon] path=UiPathSegment?;
	public UiTargetBindingEndpointElements getUiTargetBindingEndpointAccess() {
		return (pUiTargetBindingEndpoint != null) ? pUiTargetBindingEndpoint : (pUiTargetBindingEndpoint = new UiTargetBindingEndpointElements());
	}
	
	public ParserRule getUiTargetBindingEndpointRule() {
		return getUiTargetBindingEndpointAccess().getRule();
	}

	//UiPathSegment:
	//	{UiPathSegment} "->" jvmField=[JvmField] path=UiPathSegment?;
	public UiPathSegmentElements getUiPathSegmentAccess() {
		return (pUiPathSegment != null) ? pUiPathSegment : (pUiPathSegment = new UiPathSegmentElements());
	}
	
	public ParserRule getUiPathSegmentRule() {
		return getUiPathSegmentAccess().getRule();
	}

	//FQN:
	//	(ID ".")* ID;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=" | "*=" | "/=" | "%=" | "<" "<" "=" | ">" ">"? ">=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<" "=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<" | "=>") | "<>" | "?:";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XPostfixOperation returns XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (memberCallArguments+=XShortClosure |
	//	memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> ("(" declaredParam=JvmFormalParameter ":") switch=XExpression ")" | =>
	//	(declaredParam=JvmFormalParameter ":")? switch=XExpression) "{" cases+=XCasePart* ("default" ":" default=XExpression)?
	//	"}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ("case" case=XExpression)? (":" then=XExpression | ",");
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	=> ({XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":") forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XBasicForLoopExpression returns XExpression:
	//	{XBasicForLoopExpression} "for" "(" (initExpressions+=XExpressionOrVarDeclaration (","
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ";" expression=XExpression? ";" (updateExpressions+=XExpression (","
	//	updateExpressions+=XExpression)*)? ")" eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionOrVarDeclaration ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionOrVarDeclaration returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? (=>
	//	explicitConstructorCall?="(" (arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XSynchronizedExpression returns XExpression:
	//	=> ({XSynchronizedExpression} "synchronized" "(") param=XExpression ")" expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbase.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbase.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbase.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbase.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbase.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbase.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbase.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbase.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbase.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbase.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbase.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbase.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbase.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?="*" | memberName=ValidID) | importedType=[JvmDeclaredType|QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbase.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//QualifiedNameInStaticImport:
	//	(ValidID ".")+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXbase.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbase.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXbase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbase.getANY_OTHERRule();
	} 
}
