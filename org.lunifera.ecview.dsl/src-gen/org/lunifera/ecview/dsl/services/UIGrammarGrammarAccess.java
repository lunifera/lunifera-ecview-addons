/*
* generated by Xtext
*/
package org.lunifera.ecview.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class UIGrammarGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class UiModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPackageNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cPackageNameAssignment_1.eContents().get(0);
		private final Assignment cImportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportsUiImportsParserRuleCall_2_0 = (RuleCall)cImportsAssignment_2.eContents().get(0);
		private final Assignment cRootsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRootsUiRootElementsParserRuleCall_3_0 = (RuleCall)cRootsAssignment_3.eContents().get(0);
		
		//UiModel:
		//	"package" packageName=QualifiedName imports+=UiImports* roots+=UiRootElements*;
		public ParserRule getRule() { return rule; }

		//"package" packageName=QualifiedName imports+=UiImports* roots+=UiRootElements*
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//packageName=QualifiedName
		public Assignment getPackageNameAssignment_1() { return cPackageNameAssignment_1; }

		//QualifiedName
		public RuleCall getPackageNameQualifiedNameParserRuleCall_1_0() { return cPackageNameQualifiedNameParserRuleCall_1_0; }

		//imports+=UiImports*
		public Assignment getImportsAssignment_2() { return cImportsAssignment_2; }

		//UiImports
		public RuleCall getImportsUiImportsParserRuleCall_2_0() { return cImportsUiImportsParserRuleCall_2_0; }

		//roots+=UiRootElements*
		public Assignment getRootsAssignment_3() { return cRootsAssignment_3; }

		//UiRootElements
		public RuleCall getRootsUiRootElementsParserRuleCall_3_0() { return cRootsUiRootElementsParserRuleCall_3_0; }
	}

	public class UiImportsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiImports");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//UiImports:
		//	"import" importedNamespace=QualifiedNameWithWildcard ";"?;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedNameWithWildcard ";"?
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class UiRootElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiRootElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiViewSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUiValidatorAliasParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//UiRootElements:
		//	UiView | UiViewSet | UiValidatorAlias;
		public ParserRule getRule() { return rule; }

		//UiView | UiViewSet | UiValidatorAlias
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiView
		public RuleCall getUiViewParserRuleCall_0() { return cUiViewParserRuleCall_0; }

		//UiViewSet
		public RuleCall getUiViewSetParserRuleCall_1() { return cUiViewSetParserRuleCall_1; }

		//UiValidatorAlias
		public RuleCall getUiValidatorAliasParserRuleCall_2() { return cUiValidatorAliasParserRuleCall_2; }
	}

	public class UiValidatorAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiValidatorAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValidatorAliasKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValidatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValidatorUiValidatorParserRuleCall_1_0 = (RuleCall)cValidatorAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAliasAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAliasIDTerminalRuleCall_3_0 = (RuleCall)cAliasAssignment_3.eContents().get(0);
		
		////UiVisibilityProcessor returns UiVisibilityProcessor:
		////	{UiVisibilityProcessor}
		////	name=ID '{'
		////	bindingAlias+=UiBindingEndpointAlias*
		////	changeTrigger+=UiChangeTrigger*
		////	rule=UiVisibilityRule
		////	propertiesAssignment=UiVisibilityPropertiesAssignment
		////	'}';
		////UiVisibilityProcessorDef returns UiVisibilityProcessorDef:
		////	'visibilityProcessor' processor=UiVisibilityProcessor;
		////
		////UiVisibilityProcessorAssignment returns UiVisibilityProcessorAssignment:
		////	'visibilityProcessor' (processor=UiVisibilityProcessor | processorAlias=[UiVisibilityProcessor|QualifiedName] ';');
		////
		////UiVisibilityProperties returns UiVisibilityProperties:
		////	{UiVisibilityProperties}
		////	(name=ID)? '{'
		////	'}';
		////
		////UiVisibilityPropertiesDef returns UiVisibilityPropertiesDef:
		////	'visibilityProps' properties=UiVisibilityProperties;
		////
		////UiVisibilityPropertiesAssignment returns UiVisibilityPropertiesAssignment:
		////	'visibilityProps' (properties=UiVisibilityProperties | propertyAlias=[UiVisibilityProperties|QualifiedName] ';');
		////
		////UiChangeTrigger returns UiChangeTrigger:
		////	'trigger' (endpoint=UiBindingEndpointAssignment | endpointAlias=[UiBindingEndpointAlias]);
		////
		////UiVisibilityRule returns UiVisibilityRule:
		////	UiXbaseVisibilityRule;
		////
		////UiXbaseVisibilityRule returns UiXbaseVisibilityRule:
		////	{UiXbaseVisibilityRule}
		////	'rule'
		////	expression=XBlockExpression;
		//UiValidatorAlias:
		//	"validatorAlias" validator=UiValidator "as" alias=ID;
		public ParserRule getRule() { return rule; }

		//"validatorAlias" validator=UiValidator "as" alias=ID
		public Group getGroup() { return cGroup; }

		//"validatorAlias"
		public Keyword getValidatorAliasKeyword_0() { return cValidatorAliasKeyword_0; }

		//validator=UiValidator
		public Assignment getValidatorAssignment_1() { return cValidatorAssignment_1; }

		//UiValidator
		public RuleCall getValidatorUiValidatorParserRuleCall_1_0() { return cValidatorUiValidatorParserRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//alias=ID
		public Assignment getAliasAssignment_3() { return cAliasAssignment_3; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_3_0() { return cAliasIDTerminalRuleCall_3_0; }
	}

	public class UiValidatorAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiValidatorAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldValidationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFieldUiFieldCrossReference_1_0 = (CrossReference)cFieldAssignment_1.eContents().get(0);
		private final RuleCall cFieldUiFieldIDTerminalRuleCall_1_0_1 = (RuleCall)cFieldUiFieldCrossReference_1_0.eContents().get(1);
		private final Keyword cPlusSignEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValidatorDefAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValidatorDefUiValidatorDefParserRuleCall_3_0_0 = (RuleCall)cValidatorDefAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cValidatorAliasAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cValidatorAliasUiValidatorAliasCrossReference_3_1_0_0 = (CrossReference)cValidatorAliasAssignment_3_1_0.eContents().get(0);
		private final RuleCall cValidatorAliasUiValidatorAliasQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cValidatorAliasUiValidatorAliasCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//UiValidatorAssignment:
		//	"fieldValidation" field=[UiField] "+=" (validatorDef=UiValidatorDef | validatorAlias=[UiValidatorAlias|QualifiedName]
		//	";");
		public ParserRule getRule() { return rule; }

		//"fieldValidation" field=[UiField] "+=" (validatorDef=UiValidatorDef | validatorAlias=[UiValidatorAlias|QualifiedName]
		//";")
		public Group getGroup() { return cGroup; }

		//"fieldValidation"
		public Keyword getFieldValidationKeyword_0() { return cFieldValidationKeyword_0; }

		//field=[UiField]
		public Assignment getFieldAssignment_1() { return cFieldAssignment_1; }

		//[UiField]
		public CrossReference getFieldUiFieldCrossReference_1_0() { return cFieldUiFieldCrossReference_1_0; }

		//ID
		public RuleCall getFieldUiFieldIDTerminalRuleCall_1_0_1() { return cFieldUiFieldIDTerminalRuleCall_1_0_1; }

		//"+="
		public Keyword getPlusSignEqualsSignKeyword_2() { return cPlusSignEqualsSignKeyword_2; }

		//validatorDef=UiValidatorDef | validatorAlias=[UiValidatorAlias|QualifiedName] ";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//validatorDef=UiValidatorDef
		public Assignment getValidatorDefAssignment_3_0() { return cValidatorDefAssignment_3_0; }

		//UiValidatorDef
		public RuleCall getValidatorDefUiValidatorDefParserRuleCall_3_0_0() { return cValidatorDefUiValidatorDefParserRuleCall_3_0_0; }

		//validatorAlias=[UiValidatorAlias|QualifiedName] ";"
		public Group getGroup_3_1() { return cGroup_3_1; }

		//validatorAlias=[UiValidatorAlias|QualifiedName]
		public Assignment getValidatorAliasAssignment_3_1_0() { return cValidatorAliasAssignment_3_1_0; }

		//[UiValidatorAlias|QualifiedName]
		public CrossReference getValidatorAliasUiValidatorAliasCrossReference_3_1_0_0() { return cValidatorAliasUiValidatorAliasCrossReference_3_1_0_0; }

		//QualifiedName
		public RuleCall getValidatorAliasUiValidatorAliasQualifiedNameParserRuleCall_3_1_0_0_1() { return cValidatorAliasUiValidatorAliasQualifiedNameParserRuleCall_3_1_0_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3_1_1() { return cSemicolonKeyword_3_1_1; }
	}

	public class UiValidatorDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiValidatorDef");
		private final Assignment cValidatorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValidatorUiValidatorParserRuleCall_0 = (RuleCall)cValidatorAssignment.eContents().get(0);
		
		//UiValidatorDef:
		//	validator=UiValidator;
		public ParserRule getRule() { return rule; }

		//validator=UiValidator
		public Assignment getValidatorAssignment() { return cValidatorAssignment; }

		//UiValidator
		public RuleCall getValidatorUiValidatorParserRuleCall_0() { return cValidatorUiValidatorParserRuleCall_0; }
	}

	public class UiViewSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiViewSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cViewsetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBeanSlotsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBeanSlotsUiBeanSlotParserRuleCall_3_0 = (RuleCall)cBeanSlotsAssignment_3.eContents().get(0);
		private final Assignment cBindingEndpointAliasAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_4_0 = (RuleCall)cBindingEndpointAliasAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiViewSet:
		//	"viewset" name=ID "{" beanSlots+=UiBeanSlot* bindingEndpointAlias+=UiBindingEndpointAlias* "}";
		public ParserRule getRule() { return rule; }

		//"viewset" name=ID "{" beanSlots+=UiBeanSlot* bindingEndpointAlias+=UiBindingEndpointAlias* "}"
		public Group getGroup() { return cGroup; }

		//"viewset"
		public Keyword getViewsetKeyword_0() { return cViewsetKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//beanSlots+=UiBeanSlot*
		public Assignment getBeanSlotsAssignment_3() { return cBeanSlotsAssignment_3; }

		//UiBeanSlot
		public RuleCall getBeanSlotsUiBeanSlotParserRuleCall_3_0() { return cBeanSlotsUiBeanSlotParserRuleCall_3_0; }

		//bindingEndpointAlias+=UiBindingEndpointAlias*
		public Assignment getBindingEndpointAliasAssignment_4() { return cBindingEndpointAliasAssignment_4; }

		//UiBindingEndpointAlias
		public RuleCall getBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_4_0() { return cBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class UiBindingEndpointAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBindingEndpointAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataAliasKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEndpointAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEndpointUiBindingEndpointAssignmentParserRuleCall_1_0 = (RuleCall)cEndpointAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAliasAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAliasIDTerminalRuleCall_3_0 = (RuleCall)cAliasAssignment_3.eContents().get(0);
		
		//UiBindingEndpointAlias:
		//	"dataAlias" endpoint=UiBindingEndpointAssignment "as" alias=ID;
		public ParserRule getRule() { return rule; }

		//"dataAlias" endpoint=UiBindingEndpointAssignment "as" alias=ID
		public Group getGroup() { return cGroup; }

		//"dataAlias"
		public Keyword getDataAliasKeyword_0() { return cDataAliasKeyword_0; }

		//endpoint=UiBindingEndpointAssignment
		public Assignment getEndpointAssignment_1() { return cEndpointAssignment_1; }

		//UiBindingEndpointAssignment
		public RuleCall getEndpointUiBindingEndpointAssignmentParserRuleCall_1_0() { return cEndpointUiBindingEndpointAssignmentParserRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//alias=ID
		public Assignment getAliasAssignment_3() { return cAliasAssignment_3; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_3_0() { return cAliasIDTerminalRuleCall_3_0; }
	}

	public class UiBeanSlotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBeanSlot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatasourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cJvmTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cJvmTypeJvmTypeReferenceParserRuleCall_3_0 = (RuleCall)cJvmTypeAssignment_3.eContents().get(0);
		
		//UiBeanSlot:
		//	"datasource" name=ID ":" jvmType=JvmTypeReference;
		public ParserRule getRule() { return rule; }

		//"datasource" name=ID ":" jvmType=JvmTypeReference
		public Group getGroup() { return cGroup; }

		//"datasource"
		public Keyword getDatasourceKeyword_0() { return cDatasourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//jvmType=JvmTypeReference
		public Assignment getJvmTypeAssignment_3() { return cJvmTypeAssignment_3; }

		//JvmTypeReference
		public RuleCall getJvmTypeJvmTypeReferenceParserRuleCall_3_0() { return cJvmTypeJvmTypeReferenceParserRuleCall_3_0; }
	}

	public class UiBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBindKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListBindingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cListBindingListKeyword_1_0 = (Keyword)cListBindingAssignment_1.eContents().get(0);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceUiBindingEndpointAssignmentParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cTargetToSourceAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cTargetToSourceLessThanSignKeyword_3_0_0 = (Keyword)cTargetToSourceAssignment_3_0.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSourceToTargetAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Keyword cSourceToTargetGreaterThanSignKeyword_3_2_0 = (Keyword)cSourceToTargetAssignment_3_2.eContents().get(0);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetUiBindingEndpointAssignmentParserRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		
		//UiBinding:
		//	"bind" listBinding?="list"? source=UiBindingEndpointAssignment (targetToSource?="<"? "--" sourceToTarget?=">"?)
		//	target=UiBindingEndpointAssignment;
		public ParserRule getRule() { return rule; }

		//"bind" listBinding?="list"? source=UiBindingEndpointAssignment (targetToSource?="<"? "--" sourceToTarget?=">"?)
		//target=UiBindingEndpointAssignment
		public Group getGroup() { return cGroup; }

		//"bind"
		public Keyword getBindKeyword_0() { return cBindKeyword_0; }

		//listBinding?="list"?
		public Assignment getListBindingAssignment_1() { return cListBindingAssignment_1; }

		//"list"
		public Keyword getListBindingListKeyword_1_0() { return cListBindingListKeyword_1_0; }

		//source=UiBindingEndpointAssignment
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//UiBindingEndpointAssignment
		public RuleCall getSourceUiBindingEndpointAssignmentParserRuleCall_2_0() { return cSourceUiBindingEndpointAssignmentParserRuleCall_2_0; }

		//targetToSource?="<"? "--" sourceToTarget?=">"?
		public Group getGroup_3() { return cGroup_3; }

		//targetToSource?="<"?
		public Assignment getTargetToSourceAssignment_3_0() { return cTargetToSourceAssignment_3_0; }

		//"<"
		public Keyword getTargetToSourceLessThanSignKeyword_3_0_0() { return cTargetToSourceLessThanSignKeyword_3_0_0; }

		//"--"
		public Keyword getHyphenMinusHyphenMinusKeyword_3_1() { return cHyphenMinusHyphenMinusKeyword_3_1; }

		//sourceToTarget?=">"?
		public Assignment getSourceToTargetAssignment_3_2() { return cSourceToTargetAssignment_3_2; }

		//">"
		public Keyword getSourceToTargetGreaterThanSignKeyword_3_2_0() { return cSourceToTargetGreaterThanSignKeyword_3_2_0; }

		//target=UiBindingEndpointAssignment
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//UiBindingEndpointAssignment
		public RuleCall getTargetUiBindingEndpointAssignmentParserRuleCall_4_0() { return cTargetUiBindingEndpointAssignmentParserRuleCall_4_0; }
	}

	public class UiBindingEndpointAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiBindingEndpointAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUiTypedBindableDefParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Action cUiBindingEndpointAssignmentTypedBindableDefAction_0_1 = (Action)cGroup_0.eContents().get(1);
		private final Assignment cPathAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cPathUiPathSegmentParserRuleCall_0_2_0 = (RuleCall)cPathAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cUiBindingEndpointAssignmentAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cTypedBindableAliasAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cTypedBindableAliasUiTypedBindableCrossReference_1_1_0 = (CrossReference)cTypedBindableAliasAssignment_1_1.eContents().get(0);
		private final RuleCall cTypedBindableAliasUiTypedBindableIDTerminalRuleCall_1_1_0_1 = (RuleCall)cTypedBindableAliasUiTypedBindableCrossReference_1_1_0.eContents().get(1);
		private final Assignment cPathAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPathUiPathSegmentParserRuleCall_1_2_0 = (RuleCall)cPathAssignment_1_2.eContents().get(0);
		
		//UiBindingEndpointAssignment returns UiBindingExpression:
		//	UiTypedBindableDef {UiBindingEndpointAssignment.typedBindableDef=current} path=UiPathSegment? |
		//	{UiBindingEndpointAssignment} typedBindableAlias=[UiTypedBindable] path=UiPathSegment?;
		public ParserRule getRule() { return rule; }

		//UiTypedBindableDef {UiBindingEndpointAssignment.typedBindableDef=current} path=UiPathSegment? |
		//{UiBindingEndpointAssignment} typedBindableAlias=[UiTypedBindable] path=UiPathSegment?
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiTypedBindableDef {UiBindingEndpointAssignment.typedBindableDef=current} path=UiPathSegment?
		public Group getGroup_0() { return cGroup_0; }

		//UiTypedBindableDef
		public RuleCall getUiTypedBindableDefParserRuleCall_0_0() { return cUiTypedBindableDefParserRuleCall_0_0; }

		//{UiBindingEndpointAssignment.typedBindableDef=current}
		public Action getUiBindingEndpointAssignmentTypedBindableDefAction_0_1() { return cUiBindingEndpointAssignmentTypedBindableDefAction_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_0_2() { return cPathAssignment_0_2; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_0_2_0() { return cPathUiPathSegmentParserRuleCall_0_2_0; }

		//{UiBindingEndpointAssignment} typedBindableAlias=[UiTypedBindable] path=UiPathSegment?
		public Group getGroup_1() { return cGroup_1; }

		//{UiBindingEndpointAssignment}
		public Action getUiBindingEndpointAssignmentAction_1_0() { return cUiBindingEndpointAssignmentAction_1_0; }

		//typedBindableAlias=[UiTypedBindable]
		public Assignment getTypedBindableAliasAssignment_1_1() { return cTypedBindableAliasAssignment_1_1; }

		//[UiTypedBindable]
		public CrossReference getTypedBindableAliasUiTypedBindableCrossReference_1_1_0() { return cTypedBindableAliasUiTypedBindableCrossReference_1_1_0; }

		//ID
		public RuleCall getTypedBindableAliasUiTypedBindableIDTerminalRuleCall_1_1_0_1() { return cTypedBindableAliasUiTypedBindableIDTerminalRuleCall_1_1_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_1_2() { return cPathAssignment_1_2; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_1_2_0() { return cPathUiPathSegmentParserRuleCall_1_2_0; }
	}

	public class UiPathSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiPathSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cJvmFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cJvmFieldJvmFieldCrossReference_1_0 = (CrossReference)cJvmFieldAssignment_1.eContents().get(0);
		private final RuleCall cJvmFieldJvmFieldIDTerminalRuleCall_1_0_1 = (RuleCall)cJvmFieldJvmFieldCrossReference_1_0.eContents().get(1);
		private final Assignment cPathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPathUiPathSegmentParserRuleCall_2_0 = (RuleCall)cPathAssignment_2.eContents().get(0);
		
		//UiPathSegment:
		//	"." jvmField=[JvmField] path=UiPathSegment?;
		public ParserRule getRule() { return rule; }

		//"." jvmField=[JvmField] path=UiPathSegment?
		public Group getGroup() { return cGroup; }

		//"."
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }

		//jvmField=[JvmField]
		public Assignment getJvmFieldAssignment_1() { return cJvmFieldAssignment_1; }

		//[JvmField]
		public CrossReference getJvmFieldJvmFieldCrossReference_1_0() { return cJvmFieldJvmFieldCrossReference_1_0; }

		//ID
		public RuleCall getJvmFieldJvmFieldIDTerminalRuleCall_1_0_1() { return cJvmFieldJvmFieldIDTerminalRuleCall_1_0_1; }

		//path=UiPathSegment?
		public Assignment getPathAssignment_2() { return cPathAssignment_2; }

		//UiPathSegment
		public RuleCall getPathUiPathSegmentParserRuleCall_2_0() { return cPathUiPathSegmentParserRuleCall_2_0; }
	}

	public class UiTypedBindableDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiTypedBindableDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiTypedBindableDefAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cRawBindableAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cRawBindableUiRawBindableCrossReference_1_0_0 = (CrossReference)cRawBindableAssignment_1_0.eContents().get(0);
		private final RuleCall cRawBindableUiRawBindableIDTerminalRuleCall_1_0_0_1 = (RuleCall)cRawBindableUiRawBindableCrossReference_1_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMethodAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cMethodUxEndpointDefCrossReference_1_2_0 = (CrossReference)cMethodAssignment_1_2.eContents().get(0);
		private final RuleCall cMethodUxEndpointDefIDTerminalRuleCall_1_2_0_1 = (RuleCall)cMethodUxEndpointDefCrossReference_1_2_0.eContents().get(1);
		
		//UiTypedBindableDef returns UiBindingExpression:
		//	{UiTypedBindableDef} (rawBindable=[UiRawBindable] ":" method=[cfg::UxEndpointDef]);
		public ParserRule getRule() { return rule; }

		//{UiTypedBindableDef} (rawBindable=[UiRawBindable] ":" method=[cfg::UxEndpointDef])
		public Group getGroup() { return cGroup; }

		//{UiTypedBindableDef}
		public Action getUiTypedBindableDefAction_0() { return cUiTypedBindableDefAction_0; }

		//rawBindable=[UiRawBindable] ":" method=[cfg::UxEndpointDef]
		public Group getGroup_1() { return cGroup_1; }

		//rawBindable=[UiRawBindable]
		public Assignment getRawBindableAssignment_1_0() { return cRawBindableAssignment_1_0; }

		//[UiRawBindable]
		public CrossReference getRawBindableUiRawBindableCrossReference_1_0_0() { return cRawBindableUiRawBindableCrossReference_1_0_0; }

		//ID
		public RuleCall getRawBindableUiRawBindableIDTerminalRuleCall_1_0_0_1() { return cRawBindableUiRawBindableIDTerminalRuleCall_1_0_0_1; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//method=[cfg::UxEndpointDef]
		public Assignment getMethodAssignment_1_2() { return cMethodAssignment_1_2; }

		//[cfg::UxEndpointDef]
		public CrossReference getMethodUxEndpointDefCrossReference_1_2_0() { return cMethodUxEndpointDefCrossReference_1_2_0; }

		//ID
		public RuleCall getMethodUxEndpointDefIDTerminalRuleCall_1_2_0_1() { return cMethodUxEndpointDefIDTerminalRuleCall_1_2_0_1; }
	}

	public class UiViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiView");
		private final RuleCall cUiIDEViewParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UiView:
		//	UiIDEView;
		public ParserRule getRule() { return rule; }

		//UiIDEView
		public RuleCall getUiIDEViewParserRuleCall() { return cUiIDEViewParserRuleCall; }
	}

	public class UiIDEViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiIDEView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdeviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cViewsetKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cViewSetAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cViewSetUiViewSetCrossReference_3_1_0 = (CrossReference)cViewSetAssignment_3_1.eContents().get(0);
		private final RuleCall cViewSetUiViewSetIDTerminalRuleCall_3_1_0_1 = (RuleCall)cViewSetUiViewSetCrossReference_3_1_0.eContents().get(1);
		private final Assignment cBeanSlotsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBeanSlotsUiBeanSlotParserRuleCall_4_0 = (RuleCall)cBeanSlotsAssignment_4.eContents().get(0);
		private final Assignment cContentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContentUiEmbeddableParserRuleCall_5_0 = (RuleCall)cContentAssignment_5.eContents().get(0);
		private final Assignment cBindingEndpointAliasAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_6_0 = (RuleCall)cBindingEndpointAliasAssignment_6.eContents().get(0);
		private final Assignment cBindingsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBindingsUiBindingParserRuleCall_7_0 = (RuleCall)cBindingsAssignment_7.eContents().get(0);
		private final Assignment cValidatorAssignmentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValidatorAssignmentsUiValidatorAssignmentParserRuleCall_8_0 = (RuleCall)cValidatorAssignmentsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//UiIDEView:
		//	"ideview" name=ID "{" ("viewset" viewSet=[UiViewSet])? beanSlots+=UiBeanSlot* content=UiEmbeddable? // TODO make unordered group
		//	bindingEndpointAlias+=UiBindingEndpointAlias* bindings+=UiBinding* validatorAssignments+=UiValidatorAssignment* "}";
		public ParserRule getRule() { return rule; }

		//"ideview" name=ID "{" ("viewset" viewSet=[UiViewSet])? beanSlots+=UiBeanSlot* content=UiEmbeddable? // TODO make unordered group
		//bindingEndpointAlias+=UiBindingEndpointAlias* bindings+=UiBinding* validatorAssignments+=UiValidatorAssignment* "}"
		public Group getGroup() { return cGroup; }

		//"ideview"
		public Keyword getIdeviewKeyword_0() { return cIdeviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("viewset" viewSet=[UiViewSet])?
		public Group getGroup_3() { return cGroup_3; }

		//"viewset"
		public Keyword getViewsetKeyword_3_0() { return cViewsetKeyword_3_0; }

		//viewSet=[UiViewSet]
		public Assignment getViewSetAssignment_3_1() { return cViewSetAssignment_3_1; }

		//[UiViewSet]
		public CrossReference getViewSetUiViewSetCrossReference_3_1_0() { return cViewSetUiViewSetCrossReference_3_1_0; }

		//ID
		public RuleCall getViewSetUiViewSetIDTerminalRuleCall_3_1_0_1() { return cViewSetUiViewSetIDTerminalRuleCall_3_1_0_1; }

		//beanSlots+=UiBeanSlot*
		public Assignment getBeanSlotsAssignment_4() { return cBeanSlotsAssignment_4; }

		//UiBeanSlot
		public RuleCall getBeanSlotsUiBeanSlotParserRuleCall_4_0() { return cBeanSlotsUiBeanSlotParserRuleCall_4_0; }

		//content=UiEmbeddable?
		public Assignment getContentAssignment_5() { return cContentAssignment_5; }

		//UiEmbeddable
		public RuleCall getContentUiEmbeddableParserRuleCall_5_0() { return cContentUiEmbeddableParserRuleCall_5_0; }

		//bindingEndpointAlias+=UiBindingEndpointAlias*
		public Assignment getBindingEndpointAliasAssignment_6() { return cBindingEndpointAliasAssignment_6; }

		//UiBindingEndpointAlias
		public RuleCall getBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_6_0() { return cBindingEndpointAliasUiBindingEndpointAliasParserRuleCall_6_0; }

		//bindings+=UiBinding*
		public Assignment getBindingsAssignment_7() { return cBindingsAssignment_7; }

		//UiBinding
		public RuleCall getBindingsUiBindingParserRuleCall_7_0() { return cBindingsUiBindingParserRuleCall_7_0; }

		//validatorAssignments+=UiValidatorAssignment*
		public Assignment getValidatorAssignmentsAssignment_8() { return cValidatorAssignmentsAssignment_8; }

		//UiValidatorAssignment
		public RuleCall getValidatorAssignmentsUiValidatorAssignmentParserRuleCall_8_0() { return cValidatorAssignmentsUiValidatorAssignmentParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class UiGridLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiGridLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiGridLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGridlayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContentsUiGridLayoutAssigmentParserRuleCall_5_0 = (RuleCall)cContentsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//UiGridLayout:
		//	{UiGridLayout} "gridlayout" ("(" //	(('columns=' columns=INT)?)
		//	")")? name=ID? "{" contents+=UiGridLayoutAssigment* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//{UiGridLayout} "gridlayout" ("(" //	(('columns=' columns=INT)?)
		//")")? name=ID? "{" contents+=UiGridLayoutAssigment* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}"
		public Group getGroup() { return cGroup; }

		//{UiGridLayout}
		public Action getUiGridLayoutAction_0() { return cUiGridLayoutAction_0; }

		//"gridlayout"
		public Keyword getGridlayoutKeyword_1() { return cGridlayoutKeyword_1; }

		//("(" //	(('columns=' columns=INT)?)
		//")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		////	(('columns=' columns=INT)?)
		//")"
		public Keyword getRightParenthesisKeyword_2_1() { return cRightParenthesisKeyword_2_1; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//contents+=UiGridLayoutAssigment*
		public Assignment getContentsAssignment_5() { return cContentsAssignment_5; }

		//UiGridLayoutAssigment
		public RuleCall getContentsUiGridLayoutAssigmentParserRuleCall_5_0() { return cContentsUiGridLayoutAssigmentParserRuleCall_5_0; }

		////	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class UiGridLayoutAssigmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiGridLayoutAssigment");
		private final Assignment cElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementUiEmbeddableParserRuleCall_0 = (RuleCall)cElementAssignment.eContents().get(0);
		
		//UiGridLayoutAssigment:
		//	element=UiEmbeddable;
		public ParserRule getRule() { return rule; }

		//element=UiEmbeddable
		public Assignment getElementAssignment() { return cElementAssignment; }

		//UiEmbeddable
		public RuleCall getElementUiEmbeddableParserRuleCall_0() { return cElementUiEmbeddableParserRuleCall_0; }
	}

	public class UiFormLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiFormLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiFormLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFormKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentsUiFormLayoutAssigmentParserRuleCall_4_0 = (RuleCall)cContentsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiFormLayout:
		//	{UiFormLayout} "form" name=ID? "{" contents+=UiFormLayoutAssigment* "}";
		public ParserRule getRule() { return rule; }

		//{UiFormLayout} "form" name=ID? "{" contents+=UiFormLayoutAssigment* "}"
		public Group getGroup() { return cGroup; }

		//{UiFormLayout}
		public Action getUiFormLayoutAction_0() { return cUiFormLayoutAction_0; }

		//"form"
		public Keyword getFormKeyword_1() { return cFormKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//contents+=UiFormLayoutAssigment*
		public Assignment getContentsAssignment_4() { return cContentsAssignment_4; }

		//UiFormLayoutAssigment
		public RuleCall getContentsUiFormLayoutAssigmentParserRuleCall_4_0() { return cContentsUiFormLayoutAssigmentParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class UiFormLayoutAssigmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiFormLayoutAssigment");
		private final Assignment cElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementUiEmbeddableParserRuleCall_0 = (RuleCall)cElementAssignment.eContents().get(0);
		
		//UiFormLayoutAssigment:
		//	element=UiEmbeddable;
		public ParserRule getRule() { return rule; }

		//element=UiEmbeddable
		public Assignment getElementAssignment() { return cElementAssignment; }

		//UiEmbeddable
		public RuleCall getElementUiEmbeddableParserRuleCall_0() { return cElementUiEmbeddableParserRuleCall_0; }
	}

	public class UiVerticalLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiVerticalLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiVerticalLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVerticalLayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentsUiVerticalLayoutAssigmentParserRuleCall_4_0 = (RuleCall)cContentsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiVerticalLayout:
		//	{UiVerticalLayout} "verticalLayout" name=ID? "{" contents+=UiVerticalLayoutAssigment* "}";
		public ParserRule getRule() { return rule; }

		//{UiVerticalLayout} "verticalLayout" name=ID? "{" contents+=UiVerticalLayoutAssigment* "}"
		public Group getGroup() { return cGroup; }

		//{UiVerticalLayout}
		public Action getUiVerticalLayoutAction_0() { return cUiVerticalLayoutAction_0; }

		//"verticalLayout"
		public Keyword getVerticalLayoutKeyword_1() { return cVerticalLayoutKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//contents+=UiVerticalLayoutAssigment*
		public Assignment getContentsAssignment_4() { return cContentsAssignment_4; }

		//UiVerticalLayoutAssigment
		public RuleCall getContentsUiVerticalLayoutAssigmentParserRuleCall_4_0() { return cContentsUiVerticalLayoutAssigmentParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class UiVerticalLayoutAssigmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiVerticalLayoutAssigment");
		private final Assignment cElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementUiEmbeddableParserRuleCall_0 = (RuleCall)cElementAssignment.eContents().get(0);
		
		//UiVerticalLayoutAssigment:
		//	element=UiEmbeddable;
		public ParserRule getRule() { return rule; }

		//element=UiEmbeddable
		public Assignment getElementAssignment() { return cElementAssignment; }

		//UiEmbeddable
		public RuleCall getElementUiEmbeddableParserRuleCall_0() { return cElementUiEmbeddableParserRuleCall_0; }
	}

	public class UiHorizontalLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiHorizontalLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiHorizontalLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHorizontalLayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentsUiHorizontalLayoutAssigmentParserRuleCall_4_0 = (RuleCall)cContentsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiHorizontalLayout:
		//	{UiHorizontalLayout} "horizontalLayout" name=ID? "{" contents+=UiHorizontalLayoutAssigment* "}";
		public ParserRule getRule() { return rule; }

		//{UiHorizontalLayout} "horizontalLayout" name=ID? "{" contents+=UiHorizontalLayoutAssigment* "}"
		public Group getGroup() { return cGroup; }

		//{UiHorizontalLayout}
		public Action getUiHorizontalLayoutAction_0() { return cUiHorizontalLayoutAction_0; }

		//"horizontalLayout"
		public Keyword getHorizontalLayoutKeyword_1() { return cHorizontalLayoutKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//contents+=UiHorizontalLayoutAssigment*
		public Assignment getContentsAssignment_4() { return cContentsAssignment_4; }

		//UiHorizontalLayoutAssigment
		public RuleCall getContentsUiHorizontalLayoutAssigmentParserRuleCall_4_0() { return cContentsUiHorizontalLayoutAssigmentParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class UiHorizontalLayoutAssigmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiHorizontalLayoutAssigment");
		private final Assignment cElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementUiEmbeddableParserRuleCall_0 = (RuleCall)cElementAssignment.eContents().get(0);
		
		//UiHorizontalLayoutAssigment:
		//	element=UiEmbeddable;
		public ParserRule getRule() { return rule; }

		//element=UiEmbeddable
		public Assignment getElementAssignment() { return cElementAssignment; }

		//UiEmbeddable
		public RuleCall getElementUiEmbeddableParserRuleCall_0() { return cElementUiEmbeddableParserRuleCall_0; }
	}

	public class UiPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cXINTTerminalRuleCall_0_0 = (RuleCall)cXAssignment_0.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cYAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYINTTerminalRuleCall_2_0 = (RuleCall)cYAssignment_2.eContents().get(0);
		
		//UiPoint:
		//	x=INT "/" y=INT;
		public ParserRule getRule() { return rule; }

		//x=INT "/" y=INT
		public Group getGroup() { return cGroup; }

		//x=INT
		public Assignment getXAssignment_0() { return cXAssignment_0; }

		//INT
		public RuleCall getXINTTerminalRuleCall_0_0() { return cXINTTerminalRuleCall_0_0; }

		//"/"
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }

		//y=INT
		public Assignment getYAssignment_2() { return cYAssignment_2; }

		//INT
		public RuleCall getYINTTerminalRuleCall_2_0() { return cYINTTerminalRuleCall_2_0; }
	}

	public class UiTextFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiTextField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiTextFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextfieldKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValidatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValidatorsUiValidatorParserRuleCall_3_1_0 = (RuleCall)cValidatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		////enum UiAlignment returns YAlignment:
		////	BOTTOM_LEFT="bottom left" | BOTTOM_CENTER="bottom center" | BOTTOM_RIGHT="bottom right" | BOTTOM_FILL="bottom fill" |
		////	MIDDLE_LEFT="middle left" | MIDDLE_CENTER="middle center" | MIDDLE_RIGHT="middle right" | BOTTOM_FILL="middle fill" |
		////	TOP_LEFT="top left" | TOP_CENTER="top center" | TOP_RIGHT="top right" | TOP_FILL="top fill" |
		////	FILL_LEFT="fill left" | FILL_CENTER="fill center" | FILL_RIGHT="fill RIGHT" | FILL_FILL="fill fill" |
		////	UNDEFINED="undefined";
		////UiSpanInfo returns YSpanInfo:
		////	{YSpanInfo}
		////	((('columnFrom' columnFrom=INT)
		////	&
		////	('columnTo' columnTo=INT))?
		////	&
		////	(('rowFrom' rowFrom=INT)
		////	&
		////	('rowTo' rowTo=INT))?);
		//UiTextField:
		//	{UiTextField} "textfield" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//{UiTextField} "textfield" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup() { return cGroup; }

		//{UiTextField}
		public Action getUiTextFieldAction_0() { return cUiTextFieldAction_0; }

		//"textfield"
		public Keyword getTextfieldKeyword_1() { return cTextfieldKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//validators+=UiValidator*
		public Assignment getValidatorsAssignment_3_1() { return cValidatorsAssignment_3_1; }

		//UiValidator
		public RuleCall getValidatorsUiValidatorParserRuleCall_3_1_0() { return cValidatorsUiValidatorParserRuleCall_3_1_0; }

		////	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class UiListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//UiList:
		//	{UiList} "list" name=ID?;
		public ParserRule getRule() { return rule; }

		//{UiList} "list" name=ID?
		public Group getGroup() { return cGroup; }

		//{UiList}
		public Action getUiListAction_0() { return cUiListAction_0; }

		//"list"
		public Keyword getListKeyword_1() { return cListKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class UiTableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiTable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cTypeKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cJvmTypeAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cJvmTypeJvmTypeReferenceParserRuleCall_3_1_1_0 = (RuleCall)cJvmTypeAssignment_3_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cSelectionTypeKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSelectionTypeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cSelectionTypeUiSelectionTypeEnumRuleCall_3_2_1_0 = (RuleCall)cSelectionTypeAssignment_3_2_1.eContents().get(0);
		private final Assignment cColumnAssignmentAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cColumnAssignmentUiColumnAssignmentsParserRuleCall_3_3_0 = (RuleCall)cColumnAssignmentAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//UiTable:
		//	{UiTable} "table" name=ID? ("{" ("type" jvmType=JvmTypeReference ";")? ("selectionType"
		//	selectionType=UiSelectionType)? columnAssignment=UiColumnAssignments? "}")?;
		public ParserRule getRule() { return rule; }

		//{UiTable} "table" name=ID? ("{" ("type" jvmType=JvmTypeReference ";")? ("selectionType" selectionType=UiSelectionType)?
		//columnAssignment=UiColumnAssignments? "}")?
		public Group getGroup() { return cGroup; }

		//{UiTable}
		public Action getUiTableAction_0() { return cUiTableAction_0; }

		//"table"
		public Keyword getTableKeyword_1() { return cTableKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" ("type" jvmType=JvmTypeReference ";")? ("selectionType" selectionType=UiSelectionType)?
		//columnAssignment=UiColumnAssignments? "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("type" jvmType=JvmTypeReference ";")?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"type"
		public Keyword getTypeKeyword_3_1_0() { return cTypeKeyword_3_1_0; }

		//jvmType=JvmTypeReference
		public Assignment getJvmTypeAssignment_3_1_1() { return cJvmTypeAssignment_3_1_1; }

		//JvmTypeReference
		public RuleCall getJvmTypeJvmTypeReferenceParserRuleCall_3_1_1_0() { return cJvmTypeJvmTypeReferenceParserRuleCall_3_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3_1_2() { return cSemicolonKeyword_3_1_2; }

		//("selectionType" selectionType=UiSelectionType)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"selectionType"
		public Keyword getSelectionTypeKeyword_3_2_0() { return cSelectionTypeKeyword_3_2_0; }

		//selectionType=UiSelectionType
		public Assignment getSelectionTypeAssignment_3_2_1() { return cSelectionTypeAssignment_3_2_1; }

		//UiSelectionType
		public RuleCall getSelectionTypeUiSelectionTypeEnumRuleCall_3_2_1_0() { return cSelectionTypeUiSelectionTypeEnumRuleCall_3_2_1_0; }

		//columnAssignment=UiColumnAssignments?
		public Assignment getColumnAssignmentAssignment_3_3() { return cColumnAssignmentAssignment_3_3; }

		//UiColumnAssignments
		public RuleCall getColumnAssignmentUiColumnAssignmentsParserRuleCall_3_3_0() { return cColumnAssignmentUiColumnAssignmentsParserRuleCall_3_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
	}

	public class UiColumnAssignmentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiColumnAssignments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiColumnAssignmentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColumnsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cColumnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cColumnsUiColumnParserRuleCall_3_0 = (RuleCall)cColumnsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UiColumnAssignments:
		//	{UiColumnAssignments} "columns" "{" columns+=UiColumn* "}";
		public ParserRule getRule() { return rule; }

		//{UiColumnAssignments} "columns" "{" columns+=UiColumn* "}"
		public Group getGroup() { return cGroup; }

		//{UiColumnAssignments}
		public Action getUiColumnAssignmentsAction_0() { return cUiColumnAssignmentsAction_0; }

		//"columns"
		public Keyword getColumnsKeyword_1() { return cColumnsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//columns+=UiColumn*
		public Assignment getColumnsAssignment_3() { return cColumnsAssignment_3; }

		//UiColumn
		public RuleCall getColumnsUiColumnParserRuleCall_3_0() { return cColumnsUiColumnParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class UiColumnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiColumn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiColumnAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColumnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJvmFieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cJvmFieldJvmFieldCrossReference_2_0 = (CrossReference)cJvmFieldAssignment_2.eContents().get(0);
		private final RuleCall cJvmFieldJvmFieldIDTerminalRuleCall_2_0_1 = (RuleCall)cJvmFieldJvmFieldCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIconKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIconNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIconNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cIconNameAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UiColumn:
		//	{UiColumn} "column" jvmField=[JvmField] ("icon" iconName=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{UiColumn} "column" jvmField=[JvmField] ("icon" iconName=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{UiColumn}
		public Action getUiColumnAction_0() { return cUiColumnAction_0; }

		//"column"
		public Keyword getColumnKeyword_1() { return cColumnKeyword_1; }

		//jvmField=[JvmField]
		public Assignment getJvmFieldAssignment_2() { return cJvmFieldAssignment_2; }

		//[JvmField]
		public CrossReference getJvmFieldJvmFieldCrossReference_2_0() { return cJvmFieldJvmFieldCrossReference_2_0; }

		//ID
		public RuleCall getJvmFieldJvmFieldIDTerminalRuleCall_2_0_1() { return cJvmFieldJvmFieldIDTerminalRuleCall_2_0_1; }

		//("icon" iconName=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"icon"
		public Keyword getIconKeyword_3_0() { return cIconKeyword_3_0; }

		//iconName=STRING
		public Assignment getIconNameAssignment_3_1() { return cIconNameAssignment_3_1; }

		//STRING
		public RuleCall getIconNameSTRINGTerminalRuleCall_3_1_0() { return cIconNameSTRINGTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class UiEmbeddableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiEmbeddable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////enum SelectionType returns YSelectionType:
		////	SINGLE="SINGLE" | MULTI="MULTI";
		//UiEmbeddable:
		//	UiLayout | UiField;
		public ParserRule getRule() { return rule; }

		//UiLayout | UiField
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiLayout
		public RuleCall getUiLayoutParserRuleCall_0() { return cUiLayoutParserRuleCall_0; }

		//UiField
		public RuleCall getUiFieldParserRuleCall_1() { return cUiFieldParserRuleCall_1; }
	}

	public class UiLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiLayout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiGridLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiFormLayoutParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUiHorizontalLayoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUiVerticalLayoutParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//UiLayout:
		//	UiGridLayout | UiFormLayout | UiHorizontalLayout | UiVerticalLayout;
		public ParserRule getRule() { return rule; }

		//UiGridLayout | UiFormLayout | UiHorizontalLayout | UiVerticalLayout
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiGridLayout
		public RuleCall getUiGridLayoutParserRuleCall_0() { return cUiGridLayoutParserRuleCall_0; }

		//UiFormLayout
		public RuleCall getUiFormLayoutParserRuleCall_1() { return cUiFormLayoutParserRuleCall_1; }

		//UiHorizontalLayout
		public RuleCall getUiHorizontalLayoutParserRuleCall_2() { return cUiHorizontalLayoutParserRuleCall_2; }

		//UiVerticalLayout
		public RuleCall getUiVerticalLayoutParserRuleCall_3() { return cUiVerticalLayoutParserRuleCall_3; }
	}

	public class UiFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiTextFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUiNumericFieldParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUiCheckBoxParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUiTableParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//UiField:
		//	UiTextField | UiList | UiNumericField | UiCheckBox | UiTable;
		public ParserRule getRule() { return rule; }

		//UiTextField | UiList | UiNumericField | UiCheckBox | UiTable
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiTextField
		public RuleCall getUiTextFieldParserRuleCall_0() { return cUiTextFieldParserRuleCall_0; }

		//UiList
		public RuleCall getUiListParserRuleCall_1() { return cUiListParserRuleCall_1; }

		//UiNumericField
		public RuleCall getUiNumericFieldParserRuleCall_2() { return cUiNumericFieldParserRuleCall_2; }

		//UiCheckBox
		public RuleCall getUiCheckBoxParserRuleCall_3() { return cUiCheckBoxParserRuleCall_3; }

		//UiTable
		public RuleCall getUiTableParserRuleCall_4() { return cUiTableParserRuleCall_4; }
	}

	public class UiNumericFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiNumericField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiNumericFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNumericFieldKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValidatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValidatorsUiValidatorParserRuleCall_3_1_0 = (RuleCall)cValidatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//UiNumericField:
		//	{UiNumericField} "numericField" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//{UiNumericField} "numericField" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup() { return cGroup; }

		//{UiNumericField}
		public Action getUiNumericFieldAction_0() { return cUiNumericFieldAction_0; }

		//"numericField"
		public Keyword getNumericFieldKeyword_1() { return cNumericFieldKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//validators+=UiValidator*
		public Assignment getValidatorsAssignment_3_1() { return cValidatorsAssignment_3_1; }

		//UiValidator
		public RuleCall getValidatorsUiValidatorParserRuleCall_3_1_0() { return cValidatorsUiValidatorParserRuleCall_3_1_0; }

		////	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class UiCheckBoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiCheckBox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiCheckBoxAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCheckboxKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValidatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValidatorsUiValidatorParserRuleCall_3_1_0 = (RuleCall)cValidatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//UiCheckBox:
		//	{UiCheckBox} "checkbox" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//{UiCheckBox} "checkbox" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup() { return cGroup; }

		//{UiCheckBox}
		public Action getUiCheckBoxAction_0() { return cUiCheckBoxAction_0; }

		//"checkbox"
		public Keyword getCheckboxKeyword_1() { return cCheckboxKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//validators+=UiValidator*
		public Assignment getValidatorsAssignment_3_1() { return cValidatorsAssignment_3_1; }

		//UiValidator
		public RuleCall getValidatorsUiValidatorParserRuleCall_3_1_0() { return cValidatorsUiValidatorParserRuleCall_3_1_0; }

		////	(processorAssignment=UiVisibilityProcessorAssignment)?
		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class UiValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiValidator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUiMaxLengthValidatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUiMinLengthValidatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUiRegexpValidatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUiXbaseValidatorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//UiValidator:
		//	UiMaxLengthValidator | UiMinLengthValidator | UiRegexpValidator | UiXbaseValidator;
		public ParserRule getRule() { return rule; }

		//UiMaxLengthValidator | UiMinLengthValidator | UiRegexpValidator | UiXbaseValidator
		public Alternatives getAlternatives() { return cAlternatives; }

		//UiMaxLengthValidator
		public RuleCall getUiMaxLengthValidatorParserRuleCall_0() { return cUiMaxLengthValidatorParserRuleCall_0; }

		//UiMinLengthValidator
		public RuleCall getUiMinLengthValidatorParserRuleCall_1() { return cUiMinLengthValidatorParserRuleCall_1; }

		//UiRegexpValidator
		public RuleCall getUiRegexpValidatorParserRuleCall_2() { return cUiRegexpValidatorParserRuleCall_2; }

		//UiXbaseValidator
		public RuleCall getUiXbaseValidatorParserRuleCall_3() { return cUiXbaseValidatorParserRuleCall_3; }
	}

	public class UiMaxLengthValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiMaxLengthValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiMaxLengthValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaxLengthValidatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMaxLengthAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMaxLengthINTTerminalRuleCall_4_0 = (RuleCall)cMaxLengthAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiMaxLengthValidator:
		//	{UiMaxLengthValidator} "MaxLengthValidator" name=ID? "(" maxLength=INT ")"?;
		public ParserRule getRule() { return rule; }

		//{UiMaxLengthValidator} "MaxLengthValidator" name=ID? "(" maxLength=INT ")"?
		public Group getGroup() { return cGroup; }

		//{UiMaxLengthValidator}
		public Action getUiMaxLengthValidatorAction_0() { return cUiMaxLengthValidatorAction_0; }

		//"MaxLengthValidator"
		public Keyword getMaxLengthValidatorKeyword_1() { return cMaxLengthValidatorKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//maxLength=INT
		public Assignment getMaxLengthAssignment_4() { return cMaxLengthAssignment_4; }

		//INT
		public RuleCall getMaxLengthINTTerminalRuleCall_4_0() { return cMaxLengthINTTerminalRuleCall_4_0; }

		//")"?
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class UiMinLengthValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiMinLengthValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiMinLengthValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMinLengthValidatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMinLengthAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMinLengthINTTerminalRuleCall_4_0 = (RuleCall)cMinLengthAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiMinLengthValidator:
		//	{UiMinLengthValidator} "MinLengthValidator" name=ID? "(" minLength=INT ")"?;
		public ParserRule getRule() { return rule; }

		//{UiMinLengthValidator} "MinLengthValidator" name=ID? "(" minLength=INT ")"?
		public Group getGroup() { return cGroup; }

		//{UiMinLengthValidator}
		public Action getUiMinLengthValidatorAction_0() { return cUiMinLengthValidatorAction_0; }

		//"MinLengthValidator"
		public Keyword getMinLengthValidatorKeyword_1() { return cMinLengthValidatorKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//minLength=INT
		public Assignment getMinLengthAssignment_4() { return cMinLengthAssignment_4; }

		//INT
		public RuleCall getMinLengthINTTerminalRuleCall_4_0() { return cMinLengthINTTerminalRuleCall_4_0; }

		//")"?
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class UiRegexpValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiRegexpValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiRegexpValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRegexValidatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRegExpressionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRegExpressionSTRINGTerminalRuleCall_4_0 = (RuleCall)cRegExpressionAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UiRegexpValidator:
		//	{UiRegexpValidator} "RegexValidator" name=ID? "(" regExpression=STRING ")"?;
		public ParserRule getRule() { return rule; }

		//{UiRegexpValidator} "RegexValidator" name=ID? "(" regExpression=STRING ")"?
		public Group getGroup() { return cGroup; }

		//{UiRegexpValidator}
		public Action getUiRegexpValidatorAction_0() { return cUiRegexpValidatorAction_0; }

		//"RegexValidator"
		public Keyword getRegexValidatorKeyword_1() { return cRegexValidatorKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//regExpression=STRING
		public Assignment getRegExpressionAssignment_4() { return cRegExpressionAssignment_4; }

		//STRING
		public RuleCall getRegExpressionSTRINGTerminalRuleCall_4_0() { return cRegExpressionSTRINGTerminalRuleCall_4_0; }

		//")"?
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class UiXbaseValidatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UiXbaseValidator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUiXbaseValidatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExpressionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJvmTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJvmTypeJvmTypeReferenceParserRuleCall_4_0 = (RuleCall)cJvmTypeAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpressionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_6_0 = (RuleCall)cExpressionAssignment_6.eContents().get(0);
		
		//UiXbaseValidator:
		//	{UiXbaseValidator} "Expression" name=ID? "(" jvmType=JvmTypeReference ")" expression=XBlockExpression?;
		public ParserRule getRule() { return rule; }

		//{UiXbaseValidator} "Expression" name=ID? "(" jvmType=JvmTypeReference ")" expression=XBlockExpression?
		public Group getGroup() { return cGroup; }

		//{UiXbaseValidator}
		public Action getUiXbaseValidatorAction_0() { return cUiXbaseValidatorAction_0; }

		//"Expression"
		public Keyword getExpressionKeyword_1() { return cExpressionKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//jvmType=JvmTypeReference
		public Assignment getJvmTypeAssignment_4() { return cJvmTypeAssignment_4; }

		//JvmTypeReference
		public RuleCall getJvmTypeJvmTypeReferenceParserRuleCall_4_0() { return cJvmTypeJvmTypeReferenceParserRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//expression=XBlockExpression?
		public Assignment getExpressionAssignment_6() { return cExpressionAssignment_6; }

		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_6_0() { return cExpressionXBlockExpressionParserRuleCall_6_0; }
	}
	
	
	public class UiSelectionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "UiSelectionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLESingleKeyword_0_0 = (Keyword)cSINGLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMULTIEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMULTIMultiKeyword_1_0 = (Keyword)cMULTIEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENoneKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum UiSelectionType:
		//	SINGLE="single" | MULTI="multi" | NONE="none";
		public EnumRule getRule() { return rule; }

		//SINGLE="single" | MULTI="multi" | NONE="none"
		public Alternatives getAlternatives() { return cAlternatives; }

		//SINGLE="single"
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_0() { return cSINGLEEnumLiteralDeclaration_0; }

		//"single"
		public Keyword getSINGLESingleKeyword_0_0() { return cSINGLESingleKeyword_0_0; }

		//MULTI="multi"
		public EnumLiteralDeclaration getMULTIEnumLiteralDeclaration_1() { return cMULTIEnumLiteralDeclaration_1; }

		//"multi"
		public Keyword getMULTIMultiKeyword_1_0() { return cMULTIMultiKeyword_1_0; }

		//NONE="none"
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }

		//"none"
		public Keyword getNONENoneKeyword_2_0() { return cNONENoneKeyword_2_0; }
	}
	
	private UiModelElements pUiModel;
	private UiImportsElements pUiImports;
	private UiRootElementsElements pUiRootElements;
	private UiValidatorAliasElements pUiValidatorAlias;
	private UiValidatorAssignmentElements pUiValidatorAssignment;
	private UiValidatorDefElements pUiValidatorDef;
	private UiViewSetElements pUiViewSet;
	private UiBindingEndpointAliasElements pUiBindingEndpointAlias;
	private UiBeanSlotElements pUiBeanSlot;
	private UiBindingElements pUiBinding;
	private UiBindingEndpointAssignmentElements pUiBindingEndpointAssignment;
	private UiPathSegmentElements pUiPathSegment;
	private UiTypedBindableDefElements pUiTypedBindableDef;
	private UiViewElements pUiView;
	private UiIDEViewElements pUiIDEView;
	private UiGridLayoutElements pUiGridLayout;
	private UiGridLayoutAssigmentElements pUiGridLayoutAssigment;
	private UiFormLayoutElements pUiFormLayout;
	private UiFormLayoutAssigmentElements pUiFormLayoutAssigment;
	private UiVerticalLayoutElements pUiVerticalLayout;
	private UiVerticalLayoutAssigmentElements pUiVerticalLayoutAssigment;
	private UiHorizontalLayoutElements pUiHorizontalLayout;
	private UiHorizontalLayoutAssigmentElements pUiHorizontalLayoutAssigment;
	private UiPointElements pUiPoint;
	private UiTextFieldElements pUiTextField;
	private UiListElements pUiList;
	private UiTableElements pUiTable;
	private UiSelectionTypeElements unknownRuleUiSelectionType;
	private UiColumnAssignmentsElements pUiColumnAssignments;
	private UiColumnElements pUiColumn;
	private UiEmbeddableElements pUiEmbeddable;
	private UiLayoutElements pUiLayout;
	private UiFieldElements pUiField;
	private UiNumericFieldElements pUiNumericField;
	private UiCheckBoxElements pUiCheckBox;
	private UiValidatorElements pUiValidator;
	private UiMaxLengthValidatorElements pUiMaxLengthValidator;
	private UiMinLengthValidatorElements pUiMinLengthValidator;
	private UiRegexpValidatorElements pUiRegexpValidator;
	private UiXbaseValidatorElements pUiXbaseValidator;
	
	private final Grammar grammar;

	private XbaseGrammarAccess gaXbase;

	@Inject
	public UIGrammarGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.lunifera.ecview.dsl.UIGrammar".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	
	//UiModel:
	//	"package" packageName=QualifiedName imports+=UiImports* roots+=UiRootElements*;
	public UiModelElements getUiModelAccess() {
		return (pUiModel != null) ? pUiModel : (pUiModel = new UiModelElements());
	}
	
	public ParserRule getUiModelRule() {
		return getUiModelAccess().getRule();
	}

	//UiImports:
	//	"import" importedNamespace=QualifiedNameWithWildcard ";"?;
	public UiImportsElements getUiImportsAccess() {
		return (pUiImports != null) ? pUiImports : (pUiImports = new UiImportsElements());
	}
	
	public ParserRule getUiImportsRule() {
		return getUiImportsAccess().getRule();
	}

	//UiRootElements:
	//	UiView | UiViewSet | UiValidatorAlias;
	public UiRootElementsElements getUiRootElementsAccess() {
		return (pUiRootElements != null) ? pUiRootElements : (pUiRootElements = new UiRootElementsElements());
	}
	
	public ParserRule getUiRootElementsRule() {
		return getUiRootElementsAccess().getRule();
	}

	////UiVisibilityProcessor returns UiVisibilityProcessor:
	////	{UiVisibilityProcessor}
	////	name=ID '{'
	////	bindingAlias+=UiBindingEndpointAlias*
	////	changeTrigger+=UiChangeTrigger*
	////	rule=UiVisibilityRule
	////	propertiesAssignment=UiVisibilityPropertiesAssignment
	////	'}';
	////UiVisibilityProcessorDef returns UiVisibilityProcessorDef:
	////	'visibilityProcessor' processor=UiVisibilityProcessor;
	////
	////UiVisibilityProcessorAssignment returns UiVisibilityProcessorAssignment:
	////	'visibilityProcessor' (processor=UiVisibilityProcessor | processorAlias=[UiVisibilityProcessor|QualifiedName] ';');
	////
	////UiVisibilityProperties returns UiVisibilityProperties:
	////	{UiVisibilityProperties}
	////	(name=ID)? '{'
	////	'}';
	////
	////UiVisibilityPropertiesDef returns UiVisibilityPropertiesDef:
	////	'visibilityProps' properties=UiVisibilityProperties;
	////
	////UiVisibilityPropertiesAssignment returns UiVisibilityPropertiesAssignment:
	////	'visibilityProps' (properties=UiVisibilityProperties | propertyAlias=[UiVisibilityProperties|QualifiedName] ';');
	////
	////UiChangeTrigger returns UiChangeTrigger:
	////	'trigger' (endpoint=UiBindingEndpointAssignment | endpointAlias=[UiBindingEndpointAlias]);
	////
	////UiVisibilityRule returns UiVisibilityRule:
	////	UiXbaseVisibilityRule;
	////
	////UiXbaseVisibilityRule returns UiXbaseVisibilityRule:
	////	{UiXbaseVisibilityRule}
	////	'rule'
	////	expression=XBlockExpression;
	//UiValidatorAlias:
	//	"validatorAlias" validator=UiValidator "as" alias=ID;
	public UiValidatorAliasElements getUiValidatorAliasAccess() {
		return (pUiValidatorAlias != null) ? pUiValidatorAlias : (pUiValidatorAlias = new UiValidatorAliasElements());
	}
	
	public ParserRule getUiValidatorAliasRule() {
		return getUiValidatorAliasAccess().getRule();
	}

	//UiValidatorAssignment:
	//	"fieldValidation" field=[UiField] "+=" (validatorDef=UiValidatorDef | validatorAlias=[UiValidatorAlias|QualifiedName]
	//	";");
	public UiValidatorAssignmentElements getUiValidatorAssignmentAccess() {
		return (pUiValidatorAssignment != null) ? pUiValidatorAssignment : (pUiValidatorAssignment = new UiValidatorAssignmentElements());
	}
	
	public ParserRule getUiValidatorAssignmentRule() {
		return getUiValidatorAssignmentAccess().getRule();
	}

	//UiValidatorDef:
	//	validator=UiValidator;
	public UiValidatorDefElements getUiValidatorDefAccess() {
		return (pUiValidatorDef != null) ? pUiValidatorDef : (pUiValidatorDef = new UiValidatorDefElements());
	}
	
	public ParserRule getUiValidatorDefRule() {
		return getUiValidatorDefAccess().getRule();
	}

	//UiViewSet:
	//	"viewset" name=ID "{" beanSlots+=UiBeanSlot* bindingEndpointAlias+=UiBindingEndpointAlias* "}";
	public UiViewSetElements getUiViewSetAccess() {
		return (pUiViewSet != null) ? pUiViewSet : (pUiViewSet = new UiViewSetElements());
	}
	
	public ParserRule getUiViewSetRule() {
		return getUiViewSetAccess().getRule();
	}

	//UiBindingEndpointAlias:
	//	"dataAlias" endpoint=UiBindingEndpointAssignment "as" alias=ID;
	public UiBindingEndpointAliasElements getUiBindingEndpointAliasAccess() {
		return (pUiBindingEndpointAlias != null) ? pUiBindingEndpointAlias : (pUiBindingEndpointAlias = new UiBindingEndpointAliasElements());
	}
	
	public ParserRule getUiBindingEndpointAliasRule() {
		return getUiBindingEndpointAliasAccess().getRule();
	}

	//UiBeanSlot:
	//	"datasource" name=ID ":" jvmType=JvmTypeReference;
	public UiBeanSlotElements getUiBeanSlotAccess() {
		return (pUiBeanSlot != null) ? pUiBeanSlot : (pUiBeanSlot = new UiBeanSlotElements());
	}
	
	public ParserRule getUiBeanSlotRule() {
		return getUiBeanSlotAccess().getRule();
	}

	//UiBinding:
	//	"bind" listBinding?="list"? source=UiBindingEndpointAssignment (targetToSource?="<"? "--" sourceToTarget?=">"?)
	//	target=UiBindingEndpointAssignment;
	public UiBindingElements getUiBindingAccess() {
		return (pUiBinding != null) ? pUiBinding : (pUiBinding = new UiBindingElements());
	}
	
	public ParserRule getUiBindingRule() {
		return getUiBindingAccess().getRule();
	}

	//UiBindingEndpointAssignment returns UiBindingExpression:
	//	UiTypedBindableDef {UiBindingEndpointAssignment.typedBindableDef=current} path=UiPathSegment? |
	//	{UiBindingEndpointAssignment} typedBindableAlias=[UiTypedBindable] path=UiPathSegment?;
	public UiBindingEndpointAssignmentElements getUiBindingEndpointAssignmentAccess() {
		return (pUiBindingEndpointAssignment != null) ? pUiBindingEndpointAssignment : (pUiBindingEndpointAssignment = new UiBindingEndpointAssignmentElements());
	}
	
	public ParserRule getUiBindingEndpointAssignmentRule() {
		return getUiBindingEndpointAssignmentAccess().getRule();
	}

	//UiPathSegment:
	//	"." jvmField=[JvmField] path=UiPathSegment?;
	public UiPathSegmentElements getUiPathSegmentAccess() {
		return (pUiPathSegment != null) ? pUiPathSegment : (pUiPathSegment = new UiPathSegmentElements());
	}
	
	public ParserRule getUiPathSegmentRule() {
		return getUiPathSegmentAccess().getRule();
	}

	//UiTypedBindableDef returns UiBindingExpression:
	//	{UiTypedBindableDef} (rawBindable=[UiRawBindable] ":" method=[cfg::UxEndpointDef]);
	public UiTypedBindableDefElements getUiTypedBindableDefAccess() {
		return (pUiTypedBindableDef != null) ? pUiTypedBindableDef : (pUiTypedBindableDef = new UiTypedBindableDefElements());
	}
	
	public ParserRule getUiTypedBindableDefRule() {
		return getUiTypedBindableDefAccess().getRule();
	}

	//UiView:
	//	UiIDEView;
	public UiViewElements getUiViewAccess() {
		return (pUiView != null) ? pUiView : (pUiView = new UiViewElements());
	}
	
	public ParserRule getUiViewRule() {
		return getUiViewAccess().getRule();
	}

	//UiIDEView:
	//	"ideview" name=ID "{" ("viewset" viewSet=[UiViewSet])? beanSlots+=UiBeanSlot* content=UiEmbeddable? // TODO make unordered group
	//	bindingEndpointAlias+=UiBindingEndpointAlias* bindings+=UiBinding* validatorAssignments+=UiValidatorAssignment* "}";
	public UiIDEViewElements getUiIDEViewAccess() {
		return (pUiIDEView != null) ? pUiIDEView : (pUiIDEView = new UiIDEViewElements());
	}
	
	public ParserRule getUiIDEViewRule() {
		return getUiIDEViewAccess().getRule();
	}

	//UiGridLayout:
	//	{UiGridLayout} "gridlayout" ("(" //	(('columns=' columns=INT)?)
	//	")")? name=ID? "{" contents+=UiGridLayoutAssigment* //	(processorAssignment=UiVisibilityProcessorAssignment)?
	//	"}";
	public UiGridLayoutElements getUiGridLayoutAccess() {
		return (pUiGridLayout != null) ? pUiGridLayout : (pUiGridLayout = new UiGridLayoutElements());
	}
	
	public ParserRule getUiGridLayoutRule() {
		return getUiGridLayoutAccess().getRule();
	}

	//UiGridLayoutAssigment:
	//	element=UiEmbeddable;
	public UiGridLayoutAssigmentElements getUiGridLayoutAssigmentAccess() {
		return (pUiGridLayoutAssigment != null) ? pUiGridLayoutAssigment : (pUiGridLayoutAssigment = new UiGridLayoutAssigmentElements());
	}
	
	public ParserRule getUiGridLayoutAssigmentRule() {
		return getUiGridLayoutAssigmentAccess().getRule();
	}

	//UiFormLayout:
	//	{UiFormLayout} "form" name=ID? "{" contents+=UiFormLayoutAssigment* "}";
	public UiFormLayoutElements getUiFormLayoutAccess() {
		return (pUiFormLayout != null) ? pUiFormLayout : (pUiFormLayout = new UiFormLayoutElements());
	}
	
	public ParserRule getUiFormLayoutRule() {
		return getUiFormLayoutAccess().getRule();
	}

	//UiFormLayoutAssigment:
	//	element=UiEmbeddable;
	public UiFormLayoutAssigmentElements getUiFormLayoutAssigmentAccess() {
		return (pUiFormLayoutAssigment != null) ? pUiFormLayoutAssigment : (pUiFormLayoutAssigment = new UiFormLayoutAssigmentElements());
	}
	
	public ParserRule getUiFormLayoutAssigmentRule() {
		return getUiFormLayoutAssigmentAccess().getRule();
	}

	//UiVerticalLayout:
	//	{UiVerticalLayout} "verticalLayout" name=ID? "{" contents+=UiVerticalLayoutAssigment* "}";
	public UiVerticalLayoutElements getUiVerticalLayoutAccess() {
		return (pUiVerticalLayout != null) ? pUiVerticalLayout : (pUiVerticalLayout = new UiVerticalLayoutElements());
	}
	
	public ParserRule getUiVerticalLayoutRule() {
		return getUiVerticalLayoutAccess().getRule();
	}

	//UiVerticalLayoutAssigment:
	//	element=UiEmbeddable;
	public UiVerticalLayoutAssigmentElements getUiVerticalLayoutAssigmentAccess() {
		return (pUiVerticalLayoutAssigment != null) ? pUiVerticalLayoutAssigment : (pUiVerticalLayoutAssigment = new UiVerticalLayoutAssigmentElements());
	}
	
	public ParserRule getUiVerticalLayoutAssigmentRule() {
		return getUiVerticalLayoutAssigmentAccess().getRule();
	}

	//UiHorizontalLayout:
	//	{UiHorizontalLayout} "horizontalLayout" name=ID? "{" contents+=UiHorizontalLayoutAssigment* "}";
	public UiHorizontalLayoutElements getUiHorizontalLayoutAccess() {
		return (pUiHorizontalLayout != null) ? pUiHorizontalLayout : (pUiHorizontalLayout = new UiHorizontalLayoutElements());
	}
	
	public ParserRule getUiHorizontalLayoutRule() {
		return getUiHorizontalLayoutAccess().getRule();
	}

	//UiHorizontalLayoutAssigment:
	//	element=UiEmbeddable;
	public UiHorizontalLayoutAssigmentElements getUiHorizontalLayoutAssigmentAccess() {
		return (pUiHorizontalLayoutAssigment != null) ? pUiHorizontalLayoutAssigment : (pUiHorizontalLayoutAssigment = new UiHorizontalLayoutAssigmentElements());
	}
	
	public ParserRule getUiHorizontalLayoutAssigmentRule() {
		return getUiHorizontalLayoutAssigmentAccess().getRule();
	}

	//UiPoint:
	//	x=INT "/" y=INT;
	public UiPointElements getUiPointAccess() {
		return (pUiPoint != null) ? pUiPoint : (pUiPoint = new UiPointElements());
	}
	
	public ParserRule getUiPointRule() {
		return getUiPointAccess().getRule();
	}

	////enum UiAlignment returns YAlignment:
	////	BOTTOM_LEFT="bottom left" | BOTTOM_CENTER="bottom center" | BOTTOM_RIGHT="bottom right" | BOTTOM_FILL="bottom fill" |
	////	MIDDLE_LEFT="middle left" | MIDDLE_CENTER="middle center" | MIDDLE_RIGHT="middle right" | BOTTOM_FILL="middle fill" |
	////	TOP_LEFT="top left" | TOP_CENTER="top center" | TOP_RIGHT="top right" | TOP_FILL="top fill" |
	////	FILL_LEFT="fill left" | FILL_CENTER="fill center" | FILL_RIGHT="fill RIGHT" | FILL_FILL="fill fill" |
	////	UNDEFINED="undefined";
	////UiSpanInfo returns YSpanInfo:
	////	{YSpanInfo}
	////	((('columnFrom' columnFrom=INT)
	////	&
	////	('columnTo' columnTo=INT))?
	////	&
	////	(('rowFrom' rowFrom=INT)
	////	&
	////	('rowTo' rowTo=INT))?);
	//UiTextField:
	//	{UiTextField} "textfield" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
	//	"}")?;
	public UiTextFieldElements getUiTextFieldAccess() {
		return (pUiTextField != null) ? pUiTextField : (pUiTextField = new UiTextFieldElements());
	}
	
	public ParserRule getUiTextFieldRule() {
		return getUiTextFieldAccess().getRule();
	}

	//UiList:
	//	{UiList} "list" name=ID?;
	public UiListElements getUiListAccess() {
		return (pUiList != null) ? pUiList : (pUiList = new UiListElements());
	}
	
	public ParserRule getUiListRule() {
		return getUiListAccess().getRule();
	}

	//UiTable:
	//	{UiTable} "table" name=ID? ("{" ("type" jvmType=JvmTypeReference ";")? ("selectionType"
	//	selectionType=UiSelectionType)? columnAssignment=UiColumnAssignments? "}")?;
	public UiTableElements getUiTableAccess() {
		return (pUiTable != null) ? pUiTable : (pUiTable = new UiTableElements());
	}
	
	public ParserRule getUiTableRule() {
		return getUiTableAccess().getRule();
	}

	//enum UiSelectionType:
	//	SINGLE="single" | MULTI="multi" | NONE="none";
	public UiSelectionTypeElements getUiSelectionTypeAccess() {
		return (unknownRuleUiSelectionType != null) ? unknownRuleUiSelectionType : (unknownRuleUiSelectionType = new UiSelectionTypeElements());
	}
	
	public EnumRule getUiSelectionTypeRule() {
		return getUiSelectionTypeAccess().getRule();
	}

	//UiColumnAssignments:
	//	{UiColumnAssignments} "columns" "{" columns+=UiColumn* "}";
	public UiColumnAssignmentsElements getUiColumnAssignmentsAccess() {
		return (pUiColumnAssignments != null) ? pUiColumnAssignments : (pUiColumnAssignments = new UiColumnAssignmentsElements());
	}
	
	public ParserRule getUiColumnAssignmentsRule() {
		return getUiColumnAssignmentsAccess().getRule();
	}

	//UiColumn:
	//	{UiColumn} "column" jvmField=[JvmField] ("icon" iconName=STRING)? ";";
	public UiColumnElements getUiColumnAccess() {
		return (pUiColumn != null) ? pUiColumn : (pUiColumn = new UiColumnElements());
	}
	
	public ParserRule getUiColumnRule() {
		return getUiColumnAccess().getRule();
	}

	////enum SelectionType returns YSelectionType:
	////	SINGLE="SINGLE" | MULTI="MULTI";
	//UiEmbeddable:
	//	UiLayout | UiField;
	public UiEmbeddableElements getUiEmbeddableAccess() {
		return (pUiEmbeddable != null) ? pUiEmbeddable : (pUiEmbeddable = new UiEmbeddableElements());
	}
	
	public ParserRule getUiEmbeddableRule() {
		return getUiEmbeddableAccess().getRule();
	}

	//UiLayout:
	//	UiGridLayout | UiFormLayout | UiHorizontalLayout | UiVerticalLayout;
	public UiLayoutElements getUiLayoutAccess() {
		return (pUiLayout != null) ? pUiLayout : (pUiLayout = new UiLayoutElements());
	}
	
	public ParserRule getUiLayoutRule() {
		return getUiLayoutAccess().getRule();
	}

	//UiField:
	//	UiTextField | UiList | UiNumericField | UiCheckBox | UiTable;
	public UiFieldElements getUiFieldAccess() {
		return (pUiField != null) ? pUiField : (pUiField = new UiFieldElements());
	}
	
	public ParserRule getUiFieldRule() {
		return getUiFieldAccess().getRule();
	}

	//UiNumericField:
	//	{UiNumericField} "numericField" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
	//	"}")?;
	public UiNumericFieldElements getUiNumericFieldAccess() {
		return (pUiNumericField != null) ? pUiNumericField : (pUiNumericField = new UiNumericFieldElements());
	}
	
	public ParserRule getUiNumericFieldRule() {
		return getUiNumericFieldAccess().getRule();
	}

	//UiCheckBox:
	//	{UiCheckBox} "checkbox" name=ID? ("{" validators+=UiValidator* //	(processorAssignment=UiVisibilityProcessorAssignment)?
	//	"}")?;
	public UiCheckBoxElements getUiCheckBoxAccess() {
		return (pUiCheckBox != null) ? pUiCheckBox : (pUiCheckBox = new UiCheckBoxElements());
	}
	
	public ParserRule getUiCheckBoxRule() {
		return getUiCheckBoxAccess().getRule();
	}

	//UiValidator:
	//	UiMaxLengthValidator | UiMinLengthValidator | UiRegexpValidator | UiXbaseValidator;
	public UiValidatorElements getUiValidatorAccess() {
		return (pUiValidator != null) ? pUiValidator : (pUiValidator = new UiValidatorElements());
	}
	
	public ParserRule getUiValidatorRule() {
		return getUiValidatorAccess().getRule();
	}

	//UiMaxLengthValidator:
	//	{UiMaxLengthValidator} "MaxLengthValidator" name=ID? "(" maxLength=INT ")"?;
	public UiMaxLengthValidatorElements getUiMaxLengthValidatorAccess() {
		return (pUiMaxLengthValidator != null) ? pUiMaxLengthValidator : (pUiMaxLengthValidator = new UiMaxLengthValidatorElements());
	}
	
	public ParserRule getUiMaxLengthValidatorRule() {
		return getUiMaxLengthValidatorAccess().getRule();
	}

	//UiMinLengthValidator:
	//	{UiMinLengthValidator} "MinLengthValidator" name=ID? "(" minLength=INT ")"?;
	public UiMinLengthValidatorElements getUiMinLengthValidatorAccess() {
		return (pUiMinLengthValidator != null) ? pUiMinLengthValidator : (pUiMinLengthValidator = new UiMinLengthValidatorElements());
	}
	
	public ParserRule getUiMinLengthValidatorRule() {
		return getUiMinLengthValidatorAccess().getRule();
	}

	//UiRegexpValidator:
	//	{UiRegexpValidator} "RegexValidator" name=ID? "(" regExpression=STRING ")"?;
	public UiRegexpValidatorElements getUiRegexpValidatorAccess() {
		return (pUiRegexpValidator != null) ? pUiRegexpValidator : (pUiRegexpValidator = new UiRegexpValidatorElements());
	}
	
	public ParserRule getUiRegexpValidatorRule() {
		return getUiRegexpValidatorAccess().getRule();
	}

	//UiXbaseValidator:
	//	{UiXbaseValidator} "Expression" name=ID? "(" jvmType=JvmTypeReference ")" expression=XBlockExpression?;
	public UiXbaseValidatorElements getUiXbaseValidatorAccess() {
		return (pUiXbaseValidator != null) ? pUiXbaseValidator : (pUiXbaseValidator = new UiXbaseValidatorElements());
	}
	
	public ParserRule getUiXbaseValidatorRule() {
		return getUiXbaseValidatorAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=" | "*=" | "/=" | "%=" | "<" "<" "=" | ">" ">"? ">=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<" "=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<" | "=>") | "<>" | "?:";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XPostfixOperation returns XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (memberCallArguments+=XShortClosure |
	//	memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> ("(" declaredParam=JvmFormalParameter ":") switch=XExpression ")" | =>
	//	(declaredParam=JvmFormalParameter ":")? switch=XExpression) "{" cases+=XCasePart* ("default" ":" default=XExpression)?
	//	"}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ("case" case=XExpression)? (":" then=XExpression | ",");
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	=> ({XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":") forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XBasicForLoopExpression returns XExpression:
	//	{XBasicForLoopExpression} "for" "(" (initExpressions+=XExpressionOrVarDeclaration (","
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ";" expression=XExpression? ";" (updateExpressions+=XExpression (","
	//	updateExpressions+=XExpression)*)? ")" eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionOrVarDeclaration ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionOrVarDeclaration returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? (=>
	//	explicitConstructorCall?="(" (arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XSynchronizedExpression returns XExpression:
	//	=> ({XSynchronizedExpression} "synchronized" "(") param=XExpression ")" expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbase.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbase.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbase.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbase.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbase.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbase.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbase.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbase.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbase.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbase.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbase.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbase.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbase.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?="*" | memberName=ValidID) | importedType=[JvmDeclaredType|QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbase.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//QualifiedNameInStaticImport:
	//	(ValidID ".")+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXbase.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbase.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXbase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbase.getANY_OTHERRule();
	} 
}
